{"version":3,"sources":["../../../src/ScrollLock/utils.ts"],"names":["getScrollBarWidth","scrollDiv","document","createElement","style","width","height","position","top","overflow","body","appendChild","scrollbarWidth","offsetWidth","clientWidth","removeChild","getBodyCurrentStyle","undefined","setBodyStyles","window","innerWidth","documentElement","curPaddingRight","getComputedStyle","getPropertyValue","indexOf","paddingRight","resetBodyStyles","previousStyle","activateScrollLock","element","scrollTop","scrollY","scrollTarget","stopScroll","e","target","Element","contains","scrollTo","addEventListener","removeEventListener"],"mappings":"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","sourcesContent":["/*\n\n MIT License\n\n Copyright (c) 2021 Looker Data Sciences, Inc.\n\n Permission is hereby granted, free of charge, to any person obtaining a copy\n of this software and associated documentation files (the \"Software\"), to deal\n in the Software without restriction, including without limitation the rights\n to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n copies of the Software, and to permit persons to whom the Software is\n furnished to do so, subject to the following conditions:\n\n The above copyright notice and this permission notice shall be included in all\n copies or substantial portions of the Software.\n\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n SOFTWARE.\n\n */\n\nimport pick from 'lodash/pick'\nimport { Trap } from '../TrapStack/types'\n\nexport interface ScrollLockMap {\n  [key: string]: HTMLElement\n}\n\nfunction getScrollBarWidth() {\n  // Add a hidden scrolling div to the page to get the width of a scrollbar\n  const scrollDiv = document.createElement('div')\n  scrollDiv.style.width = '99px'\n  scrollDiv.style.height = '99px'\n  scrollDiv.style.position = 'absolute'\n  scrollDiv.style.top = '-9999px'\n  scrollDiv.style.overflow = 'scroll'\n\n  document.body.appendChild(scrollDiv)\n  const scrollbarWidth = scrollDiv.offsetWidth - scrollDiv.clientWidth\n  document.body.removeChild(scrollDiv)\n\n  return scrollbarWidth\n}\n\n// For the purposes of scroll lock, we're only interested in\n// the overflow and paddingRight properties\ntype BodyStyle = Pick<CSSStyleDeclaration, 'overflow' | 'paddingRight'> | null\n\nfunction getBodyCurrentStyle(): BodyStyle {\n  return document !== undefined\n    ? pick(document.body.style, ['overflow', 'paddingRight'])\n    : null\n}\n\nfunction setBodyStyles() {\n  if (document !== undefined) {\n    // Is there a vertical scrollbar?\n    if (window.innerWidth > document.documentElement.clientWidth) {\n      const scrollbarWidth = getScrollBarWidth()\n      const curPaddingRight = window\n        .getComputedStyle(document.body)\n        .getPropertyValue('padding-right')\n      if (curPaddingRight.indexOf('calc') === -1) {\n        document.body.style.paddingRight = `calc(${curPaddingRight} + ${scrollbarWidth}px)`\n      }\n    }\n    document.body.style.overflow = 'hidden'\n  }\n}\n\nfunction resetBodyStyles(previousStyle: BodyStyle) {\n  if (previousStyle) {\n    document.body.style.paddingRight = previousStyle.paddingRight\n    document.body.style.overflow = previousStyle.overflow\n  }\n}\n\nexport function activateScrollLock({ element }: Trap) {\n  let scrollTop = window.scrollY\n  let scrollTarget: EventTarget | HTMLElement | null = document\n\n  // Handler for scroll event is needed since body overflow: hidden\n  // won't stop other scroll-able elements from scrolling\n  function stopScroll(e: Event) {\n    if (e.target !== null && e.target !== scrollTarget) {\n      // If the user has started scrolling in a new scroll-able element\n      // we need to update the stored scroll top position\n      scrollTarget = e.target\n      scrollTop =\n        scrollTarget instanceof Element\n          ? scrollTarget.scrollTop\n          : window.scrollY\n    }\n    if (\n      scrollTarget instanceof Element &&\n      !(element && element.contains(scrollTarget))\n    ) {\n      scrollTarget.scrollTop = scrollTop\n    } else if (scrollTarget === document) {\n      // Scroll event can't actually be prevented so instead we\n      // scroll the window back to the stored position\n      window.scrollTo({ top: scrollTop })\n    }\n  }\n\n  const previousStyle = getBodyCurrentStyle()\n\n  setBodyStyles()\n  window.addEventListener('scroll', stopScroll, true)\n\n  return () => {\n    window.removeEventListener('scroll', stopScroll, true)\n    resetBodyStyles(previousStyle)\n  }\n}\n"],"file":"utils.js"}