import "core-js/modules/es.array.concat.js";
import { flexbox, shouldForwardProp } from '@looker/design-tokens';
import styled, { css } from 'styled-components';
import { complexLayoutCSS } from '../Layout/utils/complex';

var cardTransition = function cardTransition() {
  return css(["", ""], function (_ref) {
    var theme = _ref.theme;
    return "".concat(theme.transitions.quick, "ms ").concat(theme.easings.ease);
  });
};

var raised = function raised(props) {
  return props.raised && css(["box-shadow:", ";&:hover{box-shadow:", ";}"], function (props) {
    return props.theme.shadows[1];
  }, function (props) {
    return props.theme.shadows[2];
  });
};

export var Card = styled.div.withConfig({
  shouldForwardProp: shouldForwardProp
}).attrs(function (_ref2) {
  var _ref2$bg = _ref2.bg,
      bg = _ref2$bg === void 0 ? 'background' : _ref2$bg,
      _ref2$border = _ref2.border,
      border = _ref2$border === void 0 ? '1px solid' : _ref2$border,
      _ref2$borderColor = _ref2.borderColor,
      borderColor = _ref2$borderColor === void 0 ? 'ui3' : _ref2$borderColor,
      _ref2$borderRadius = _ref2.borderRadius,
      borderRadius = _ref2$borderRadius === void 0 ? 'medium' : _ref2$borderRadius,
      _ref2$display = _ref2.display,
      display = _ref2$display === void 0 ? 'flex' : _ref2$display,
      _ref2$flexDirection = _ref2.flexDirection,
      flexDirection = _ref2$flexDirection === void 0 ? 'column' : _ref2$flexDirection,
      _ref2$height = _ref2.height,
      height = _ref2$height === void 0 ? '100%' : _ref2$height,
      _ref2$minWidth = _ref2.minWidth,
      minWidth = _ref2$minWidth === void 0 ? '200px' : _ref2$minWidth,
      _ref2$overflow = _ref2.overflow,
      overflow = _ref2$overflow === void 0 ? 'hidden' : _ref2$overflow;
  return {
    bg: bg,
    border: border,
    borderColor: borderColor,
    borderRadius: borderRadius,
    display: display,
    flexDirection: flexDirection,
    height: height,
    minWidth: minWidth,
    overflow: overflow
  };
}).withConfig({
  displayName: "Card",
  componentId: "sc-11cdxqo-0"
})(["", " ", " transition:border ", ",box-shadow ", ";&:hover{border-color:", ";}", ""], complexLayoutCSS, flexbox, cardTransition, cardTransition, function (_ref3) {
  var theme = _ref3.theme;
  return theme.colors.ui4;
}, raised);
//# sourceMappingURL=Card.js.map