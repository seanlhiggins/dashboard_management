function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

import "core-js/modules/es.array.concat.js";
import "core-js/modules/es.object.define-property.js";
import "core-js/modules/es.object.keys.js";
import "core-js/modules/es.symbol.js";
import "core-js/modules/es.array.filter.js";
import "core-js/modules/es.object.get-own-property-descriptor.js";
import "core-js/modules/es.array.for-each.js";
import "core-js/modules/web.dom-collections.for-each.js";
import "core-js/modules/es.object.get-own-property-descriptors.js";
import "core-js/modules/es.object.define-properties.js";
import "core-js/modules/es.object.assign.js";

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

import React from 'react';
import DayPicker, { LocaleUtils } from 'react-day-picker';
import styled from 'styled-components';
import has from 'lodash/has';
import noop from 'lodash/noop';
import { reset, calendarMixColor } from '@looker/design-tokens';
import { inputTextFocus } from '../Form/Inputs/InputText';
import { calendarSize, calendarSpacing } from './calendar-size';
import { CalendarContext } from './CalendarContext';
import { CalendarNav } from './CalendarNav';
import { dayPickerCss } from './dayPickerCss';
import { CalendarNavDisabled } from './CalendarNavDisabled';
import { formatMonthTitle } from './formatMonthTitle';

var NoopComponent = function NoopComponent() {
  return null;
};

var InternalCalendar = function InternalCalendar(_ref) {
  var className = _ref.className,
      disabled = _ref.disabled,
      localization = _ref.localization,
      onDayClick = _ref.onDayClick,
      onMonthChange = _ref.onMonthChange,
      onNextClick = _ref.onNextClick,
      onNowClick = _ref.onNowClick,
      onPrevClick = _ref.onPrevClick,
      readOnly = _ref.readOnly,
      selectedDates = _ref.selectedDates,
      _ref$showNextButton = _ref.showNextButton,
      showNextButton = _ref$showNextButton === void 0 ? true : _ref$showNextButton,
      _ref$showPreviousButt = _ref.showPreviousButton,
      showPreviousButton = _ref$showPreviousButt === void 0 ? true : _ref$showPreviousButt,
      viewMonth = _ref.viewMonth;
  var renderDateRange = selectedDates && has(selectedDates, 'from');
  var modifiers = renderDateRange ? selectedDates : {};

  var disableCallback = function disableCallback() {
    var cb = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : noop;
    return function () {
      return disabled ? noop() : cb.apply(void 0, arguments);
    };
  };

  return React.createElement(CalendarContext.Provider, {
    value: {
      onNextClick: disableCallback(onNextClick),
      onNowClick: disableCallback(onNowClick),
      onPrevClick: disableCallback(onPrevClick),
      showNextButton: (!disabled || !readOnly) && showNextButton,
      showPreviousButton: (!disabled || !readOnly) && showPreviousButton,
      size: 'medium'
    }
  }, React.createElement(DayPicker, _extends({}, localization || {}, {
    localeUtils: _objectSpread(_objectSpread({}, LocaleUtils), {}, {
      formatMonthTitle: formatMonthTitle(localization)
    }),
    className: "".concat(renderDateRange && 'render-date-range', " ").concat(className),
    selectedDays: selectedDates,
    month: viewMonth,
    showOutsideDays: true,
    onDayClick: disableCallback(onDayClick),
    navbarElement: disabled ? CalendarNavDisabled : CalendarNav,
    captionElement: NoopComponent,
    modifiers: modifiers,
    onMonthChange: onMonthChange
  })));
};

export var Calendar = styled(InternalCalendar).attrs(function () {
  return {
    size: 'medium'
  };
}).withConfig({
  displayName: "Calendar",
  componentId: "sc-16c71io-0"
})(["", " ", " ", " .DayPicker-wrapper{border:1px solid transparent;padding:0;&:focus{outline:none;", "}}.DayPicker-Month{margin:0;padding:0;}.DayPicker-Body{display:grid;grid-gap:1px;}.DayPicker-Week,.DayPicker-WeekdaysRow{display:grid;grid-template-columns:repeat(7,auto);}.DayPicker-Day{", " align-items:center;border:1px solid transparent;color:", ";cursor:", ";display:grid;justify-items:center;line-height:1;padding:0;transition:background-color 110ms linear;&.DayPicker-Day--outside{color:", ";}&--today{color:", ";}&--selected:not(.DayPicker-Day--disabled):not(.DayPicker-Day--outside){background-color:", ";position:static;&:hover{background-color:", ";}}&:focus{border-color:", ";border-width:2px;outline:none;}}&.render-date-range{.DayPicker-Day--selected{border-radius:0;&:not(.DayPicker-Day--from):first-child{border-bottom-left-radius:", ";border-top-left-radius:", ";}&:not(.DayPicker-Day--to):last-child{border-bottom-right-radius:", ";border-top-right-radius:", ";}&.DayPicker-Day--outside,&:not(.DayPicker-Day--to):not(.DayPicker-Day--from){background-color:", ";", "}&:not(.DayPicker-Day--to):not(.DayPicker-Day--from):not(.DayPicker-Day--outside){color:", ";}}.DayPicker-Day--from{border-bottom-left-radius:50%;border-top-left-radius:50%;}.DayPicker-Day--to{border-bottom-right-radius:50%;border-top-right-radius:50%;}}&:not(.DayPicker--interactionDisabled){.DayPicker-Day:not(.DayPicker-Day--disabled):not(.DayPicker-Day--selected):not(.DayPicker-Day--outside):hover{&:hover{background-color:", ";color:", ";}}}"], reset, dayPickerCss, calendarSpacing, function (_ref2) {
  var disabled = _ref2.disabled;
  return !disabled && inputTextFocus;
}, calendarSize, function (_ref3) {
  var colors = _ref3.theme.colors,
      disabled = _ref3.disabled;
  return disabled ? colors.text2 : colors.text4;
}, function (_ref4) {
  var disabled = _ref4.disabled;
  return disabled ? 'default' : 'pointer';
}, function (_ref5) {
  var colors = _ref5.theme.colors;
  return colors.text1;
}, function (_ref6) {
  var colors = _ref6.theme.colors,
      disabled = _ref6.disabled;
  return !disabled && colors.key;
}, function (_ref7) {
  var colors = _ref7.theme.colors,
      disabled = _ref7.disabled;
  return disabled ? colors.neutral : colors.key;
}, function (_ref8) {
  var colors = _ref8.theme.colors,
      disabled = _ref8.disabled,
      readOnly = _ref8.readOnly;
  return disabled || readOnly ? colors.neutralInteractive : colors.keyInteractive;
}, function (_ref9) {
  var colors = _ref9.theme.colors,
      disabled = _ref9.disabled,
      readOnly = _ref9.readOnly;
  return disabled || readOnly ? 'transparent' : colors.keyBorder;
}, function (_ref10) {
  var radii = _ref10.theme.radii;
  return radii.medium;
}, function (_ref11) {
  var radii = _ref11.theme.radii;
  return radii.medium;
}, function (_ref12) {
  var radii = _ref12.theme.radii;
  return radii.medium;
}, function (_ref13) {
  var radii = _ref13.theme.radii;
  return radii.medium;
}, function (_ref14) {
  var colors = _ref14.theme.colors,
      disabled = _ref14.disabled;
  return disabled ? colors.neutralAccent : colors.keyAccent;
}, calendarMixColor, function (_ref15) {
  var colors = _ref15.theme.colors;
  return colors.neutralInteractive;
}, function (_ref16) {
  var colors = _ref16.theme.colors,
      disabled = _ref16.disabled;
  return disabled ? 'transparent' : colors.keyAccent;
}, function (_ref17) {
  var colors = _ref17.theme.colors,
      disabled = _ref17.disabled;
  return !disabled && colors.key;
});
//# sourceMappingURL=Calendar.js.map