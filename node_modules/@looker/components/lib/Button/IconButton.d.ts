import { CompatibleHTMLProps, SpaceProps, SizeLarge, SizeMedium, SizeSmall, SizeXSmall, SizeXXSmall } from '@looker/design-tokens';
import { Property } from 'csstype';
import React from 'react';
import { Placement } from '@popperjs/core';
import { IconProps } from '../Icon';
import { ButtonBaseProps } from './types';
interface IconButtonVariantProps {
    outline?: boolean;
}
export declare type IconButtonSizes = SizeXXSmall | SizeXSmall | SizeSmall | SizeMedium | SizeLarge;
export interface IconButtonProps extends Omit<CompatibleHTMLProps<HTMLButtonElement>, 'children' | 'type'>, Omit<ButtonBaseProps, 'color'>, IconButtonVariantProps, Pick<IconProps, 'icon'>, SpaceProps {
    type?: 'button' | 'submit' | 'reset';
    focusVisible?: boolean;
    outline?: boolean;
    label: string;
    size?: IconButtonSizes;
    shape?: 'round' | 'square';
    toggle?: boolean;
    tooltipDisabled?: boolean;
    tooltipPlacement?: Placement;
    tooltipWidth?: string;
    tooltipTextAlign?: Property.TextAlign;
}
export declare const IconButtonStyle: import("styled-components").StyledComponent<"button", import("styled-components").DefaultTheme, {
    type: "reset" | "button" | "submit";
} & IconButtonProps, "type">;
export declare const IconButton: import("styled-components").StyledComponent<React.ForwardRefExoticComponent<IconButtonProps & React.RefAttributes<HTMLButtonElement>>, import("styled-components").DefaultTheme, {
    type: "reset" | "button" | "submit";
} & IconButtonProps, "type">;
export {};
