function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

import "core-js/modules/es.array.includes.js";
import "core-js/modules/es.string.includes.js";
import "core-js/modules/es.string.small.js";
import "core-js/modules/es.object.keys.js";
import "core-js/modules/es.array.index-of.js";
import "core-js/modules/es.symbol.js";
import "core-js/modules/es.array.is-array.js";
import "core-js/modules/es.symbol.description.js";
import "core-js/modules/es.object.to-string.js";
import "core-js/modules/es.symbol.iterator.js";
import "core-js/modules/es.string.iterator.js";
import "core-js/modules/es.array.iterator.js";
import "core-js/modules/web.dom-collections.iterator.js";
import "core-js/modules/es.array.slice.js";
import "core-js/modules/es.function.name.js";
import "core-js/modules/es.array.from.js";
import "core-js/modules/es.object.assign.js";

function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }

function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

function _iterableToArrayLimit(arr, i) { if (typeof Symbol === "undefined" || !(Symbol.iterator in Object(arr))) return; var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }

function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }

function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

import React, { forwardRef, useContext, useState } from 'react';
import styled from 'styled-components';
import { space, omitStyledProps } from '@looker/design-tokens';
import { inputHeight } from '../Form/Inputs/height';
import { ButtonSetContext } from './ButtonSetContext';
var ButtonLayout = forwardRef(function (_ref, ref) {
  var children = _ref.children,
      onClick = _ref.onClick,
      value = _ref.value,
      onBlur = _ref.onBlur,
      onKeyUp = _ref.onKeyUp,
      props = _objectWithoutProperties(_ref, ["children", "onClick", "value", "onBlur", "onKeyUp"]);

  var _useContext = useContext(ButtonSetContext),
      disabled = _useContext.disabled,
      contextValue = _useContext.value,
      onItemClick = _useContext.onItemClick;

  var _useState = useState(false),
      _useState2 = _slicedToArray(_useState, 2),
      isFocusVisible = _useState2[0],
      setFocusVisible = _useState2[1];

  var handleOnKeyUp = function handleOnKeyUp(event) {
    setFocusVisible(true);
    onKeyUp && onKeyUp(event);
  };

  var handleOnBlur = function handleOnBlur(event) {
    setFocusVisible(false);
    onBlur && onBlur(event);
  };

  function handleClick(e) {
    onClick && onClick(e);

    if (!e.defaultPrevented) {
      onItemClick && onItemClick(e);
    }
  }

  var itemValue = value !== undefined ? value : typeof children === 'string' ? children : '';
  var selected = contextValue ? typeof contextValue === 'string' ? contextValue === itemValue : contextValue.includes(itemValue) : false;
  return React.createElement(ButtonOuter, _extends({
    "aria-pressed": selected,
    ref: ref,
    onClick: handleClick,
    value: itemValue,
    disabled: disabled,
    focusVisible: isFocusVisible,
    onKeyUp: handleOnKeyUp,
    onBlur: handleOnBlur
  }, omitStyledProps(props)), children);
});
ButtonLayout.displayName = 'ButtonLayout';
var ButtonOuter = styled.button.attrs(function (_ref2) {
  var _ref2$type = _ref2.type,
      type = _ref2$type === void 0 ? 'button' : _ref2$type;
  return {
    type: type
  };
}).withConfig({
  displayName: "ButtonItem__ButtonOuter",
  componentId: "sc-22szay-0"
})(["", ""], function (props) {
  return props.focusVisible && "box-shadow: 0 0 0.5px 1px ".concat(props.theme.colors.keyFocus);
});
export var ButtonItem = styled(ButtonLayout).withConfig({
  displayName: "ButtonItem",
  componentId: "sc-22szay-1"
})(["align-items:center;background:transparent;border:none;color:", ";cursor:pointer;display:inline-flex;font-family:", ";font-size:", ";height:", ";justify-content:center;margin:0;padding:0 ", ";transition:background ", "ms ease;user-select:none;", " &:active,&:focus,&:hover{background:", ";color:", ";}&:focus{outline:none;}&[disabled]{color:", ";&:hover{background:inherit;}cursor:default;}&[aria-pressed='true']{background:", ";color:", ";&[disabled]{background:", ";color:", ";}}"], function (_ref3) {
  var theme = _ref3.theme;
  return theme.colors.text3;
}, function (_ref4) {
  var theme = _ref4.theme;
  return theme.fonts.body;
}, function (_ref5) {
  var theme = _ref5.theme;
  return theme.fontSizes.small;
}, inputHeight, function (_ref6) {
  var theme = _ref6.theme;
  return theme.space.small;
}, function (_ref7) {
  var theme = _ref7.theme;
  return theme.transitions.quick;
}, space, function (_ref8) {
  var theme = _ref8.theme;
  return theme.colors.neutralSubtle;
}, function (_ref9) {
  var theme = _ref9.theme;
  return theme.colors.text5;
}, function (props) {
  return props.theme.colors.text1;
}, function (_ref10) {
  var theme = _ref10.theme;
  return theme.colors.keySubtle;
}, function (_ref11) {
  var theme = _ref11.theme;
  return theme.colors.key;
}, function (_ref12) {
  var theme = _ref12.theme;
  return theme.colors.keySubtle;
}, function (_ref13) {
  var theme = _ref13.theme;
  return theme.colors.keyFocus;
});
//# sourceMappingURL=ButtonItem.js.map