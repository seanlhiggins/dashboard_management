import "core-js/modules/es.string.small.js";
import "core-js/modules/es.symbol.js";
import "core-js/modules/es.symbol.description.js";
import "core-js/modules/es.array.concat.js";
import "core-js/modules/es.array.is-array.js";
import "core-js/modules/es.object.to-string.js";
import "core-js/modules/es.symbol.iterator.js";
import "core-js/modules/es.string.iterator.js";
import "core-js/modules/es.array.iterator.js";
import "core-js/modules/web.dom-collections.iterator.js";
import "core-js/modules/es.array.from.js";
import "core-js/modules/es.array.slice.js";
import "core-js/modules/es.function.name.js";
import "core-js/modules/es.object.assign.js";

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }

function _nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _iterableToArray(iter) { if (typeof Symbol !== "undefined" && Symbol.iterator in Object(iter)) return Array.from(iter); }

function _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

import { shouldForwardProp } from '@looker/design-tokens';
import { StyledIconBase } from '@styled-icons/styled-icon';
import omit from 'lodash/omit';
import React, { forwardRef } from 'react';
import styled from 'styled-components';
import { listItemDimensionKeys } from './types';
var ListItemWrapperInternal = forwardRef(function (props, ref) {
  return React.createElement("li", _extends({}, omit(props, 'current', 'focusVisible', 'hovered', 'keyColor', 'selected', _toConsumableArray(listItemDimensionKeys)), {
    ref: ref,
    role: "none"
  }));
});
ListItemWrapperInternal.displayName = 'ListItemWrapperInternal';
export var ListItemWrapper = styled(ListItemWrapperInternal).withConfig({
  shouldForwardProp: shouldForwardProp
}).withConfig({
  displayName: "ListItemWrapper",
  componentId: "rbfk96-0"
})(["align-items:center;color:", ";display:flex;font-size:", ";font-weight:", ";list-style-type:none;min-height:", "px;outline:none;text-decoration:none;", " ", ",svg{align-self:", ";transition:color ", ";}&[aria-current='true']{background:", ";font-weight:", ";}&[aria-expanded='true']{background:", ";}&[disabled]{color:", ";& > *{cursor:not-allowed;}&:hover{color:", ";}}"], function (_ref) {
  var colors = _ref.theme.colors;
  return colors.text5;
}, function (_ref2) {
  var fontSizes = _ref2.theme.fontSizes;
  return fontSizes.small;
}, function (_ref3) {
  var fontWeights = _ref3.theme.fontWeights;
  return fontWeights.normal;
}, function (_ref4) {
  var height = _ref4.height;
  return height;
}, function (_ref5) {
  var focusVisible = _ref5.focusVisible,
      theme = _ref5.theme;
  return focusVisible && "\n      &:focus-within > * {\n        box-shadow: inset 0 0 0 2px ".concat(theme.colors.keyFocus, ";\n      }\n    ");
}, StyledIconBase, function (_ref6) {
  var description = _ref6.description;
  return description ? 'flex-start' : 'center';
}, function (_ref7) {
  var theme = _ref7.theme;
  return "".concat(theme.transitions.quick, "ms ").concat(theme.easings.ease);
}, function (_ref8) {
  var colors = _ref8.theme.colors;
  return colors.ui2;
}, function (_ref9) {
  var fontWeights = _ref9.theme.fontWeights;
  return fontWeights.semiBold;
}, function (_ref10) {
  var colors = _ref10.theme.colors;
  return colors.ui1;
}, function (_ref11) {
  var colors = _ref11.theme.colors;
  return colors.text1;
}, function (_ref12) {
  var colors = _ref12.theme.colors;
  return colors.text1;
});
//# sourceMappingURL=ListItemWrapper.js.map