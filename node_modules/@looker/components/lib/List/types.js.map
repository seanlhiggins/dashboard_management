{"version":3,"sources":["../../src/List/types.ts"],"names":["listItemDimensionKeys"],"mappings":"AA4CA,OAAO,IAAMA,qBAAqB,GAAG,CACnC,qBADmC,EAEnC,uBAFmC,EAGnC,QAHmC,EAInC,IAJmC,EAKnC,IALmC,EAMnC,SANmC,EAOnC,UAPmC,EAQnC,eARmC,EASnC,iBATmC,EAUnC,gBAVmC,CAA9B","sourcesContent":["/*\n\n MIT License\n\n Copyright (c) 2021 Looker Data Sciences, Inc.\n\n Permission is hereby granted, free of charge, to any person obtaining a copy\n of this software and associated documentation files (the \"Software\"), to deal\n in the Software without restriction, including without limitation the rights\n to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n copies of the Software, and to permit persons to whom the Software is\n furnished to do so, subject to the following conditions:\n\n The above copyright notice and this permission notice shall be included in all\n copies or substantial portions of the Software.\n\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n SOFTWARE.\n\n */\n\nimport { FontSizes, LineHeights, SpacingSizes } from '@looker/design-tokens'\nimport { ReactNode } from 'react'\nimport { IconSize } from '..'\n\nexport type DensityRamp = -3 | -2 | -1 | 0 | 1\n\nexport interface ListItemDimensions {\n  descriptionFontSize: FontSizes\n  descriptionLineHeight: LineHeights\n  height: number\n  px: SpacingSizes\n  py: SpacingSizes | '0.375rem'\n  iconGap: SpacingSizes\n  iconSize: IconSize\n  labelFontSize: FontSizes\n  labelLineHeight: LineHeights\n}\n\nexport const listItemDimensionKeys = [\n  'descriptionFontSize',\n  'descriptionLineHeight',\n  'height',\n  'px',\n  'py',\n  'iconGap',\n  'iconSize',\n  'labelFontSize',\n  'labelLineHeight',\n  'detailFontSize',\n]\n\nexport interface ListItemStatefulProps {\n  /**\n   * Replace the normal uiN(1-5) color for selected and selected + hovered color with key colors\n   * @default false\n   */\n  keyColor?: boolean\n  /**\n   * If true, the ListItem will have a \"disabled\" presentation.\n   * @default false\n   */\n  disabled?: boolean\n  /**\n   * If true, the ListItem will have a darker background color (same as selected)\n   * Note: Using current and selected at the same time is not recommended\n   * @default false\n   */\n  current?: boolean\n  /**\n   * If true, the ListItem will have a darker background color\n   * @default false\n   */\n  selected?: boolean\n}\n\nexport interface ListItemStatefulWithHoveredProps\n  extends ListItemStatefulProps {\n  /**\n   * If true, the ListItem will have a light background color\n   * @default false\n   */\n  hovered?: boolean\n}\n\ninterface DetailOptions {\n  /**\n   * If true, the detail will appear outside of the item's grey background on hover\n   * In addition, if true, events originating from the detail will not bubble to the item's handlers\n   * @default false\n   */\n  accessory?: boolean\n  /**\n   * If true, the detail will only appear on hover\n   * @default false\n   */\n  hoverDisclosure?: boolean\n}\n\nexport type Detail = ReactNode | { content: ReactNode; options: DetailOptions }\n\nexport type ListItemRole = 'button' | 'link' | 'none'\n"],"file":"types.js"}