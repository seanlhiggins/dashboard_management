import "core-js/modules/es.array.concat.js";
import "core-js/modules/es.object.keys.js";
import "core-js/modules/es.array.index-of.js";
import "core-js/modules/es.symbol.js";
import "core-js/modules/es.object.assign.js";

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

import { shouldForwardProp as _shouldForwardProp } from '@looker/design-tokens';
import React from 'react';
import styled from 'styled-components';
import { listItemBackgroundColor } from './utils';
export var ListItemLabelButton = styled.button.withConfig({
  displayName: "ListItemLabel__ListItemLabelButton",
  componentId: "nsrwox-0"
})([""]);
export var ListItemLabelLink = styled.a.withConfig({
  displayName: "ListItemLabel__ListItemLabelLink",
  componentId: "nsrwox-1"
})([""]);
export var ListItemLabelDiv = styled.div.withConfig({
  displayName: "ListItemLabel__ListItemLabelDiv",
  componentId: "nsrwox-2"
})([""]);

var listItemLabelElement = function listItemLabelElement(itemRole, disabled) {
  if (!disabled && itemRole === 'link') return ListItemLabelLink;
  if (itemRole === 'none') return ListItemLabelDiv;
  return ListItemLabelButton;
};

var ListItemLabelLayout = function ListItemLabelLayout(_ref) {
  var children = _ref.children,
      disabled = _ref.disabled,
      _ref$itemRole = _ref.itemRole,
      itemRole = _ref$itemRole === void 0 ? 'button' : _ref$itemRole,
      props = _objectWithoutProperties(_ref, ["children", "disabled", "itemRole"]);

  var Component = listItemLabelElement(itemRole, disabled);
  return React.createElement(Component, _extends({
    disabled: disabled,
    type: itemRole === 'button' || disabled ? 'button' : undefined
  }, props), children);
};

export var ListItemLabel = styled(ListItemLabelLayout).withConfig({
  shouldForwardProp: function shouldForwardProp(prop) {
    return prop === 'itemRole' || _shouldForwardProp(prop);
  }
}).withConfig({
  displayName: "ListItemLabel",
  componentId: "nsrwox-3"
})(["", " ", " align-items:center;border:none;color:inherit;cursor:pointer;display:flex;flex:1;font-size:inherit;font-weight:inherit;margin:0;min-width:0;outline:none;text-align:left;text-decoration:none;transition:", ";width:100%;&:hover,&:focus{color:inherit;text-decoration:none;}"], function (_ref2) {
  var height = _ref2.height,
      itemRole = _ref2.itemRole;
  return itemRole === 'none' && "height: ".concat(height, "px;");
}, listItemBackgroundColor, function (_ref3) {
  var _ref3$theme = _ref3.theme,
      easings = _ref3$theme.easings,
      transitions = _ref3$theme.transitions;
  return "background ".concat(transitions.quick, "ms ").concat(easings.ease, ",\n  color ").concat(transitions.quick, "ms ").concat(easings.ease);
});
//# sourceMappingURL=ListItemLabel.js.map