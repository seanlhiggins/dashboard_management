{"version":3,"sources":["../../src/List/ListItem.tsx"],"names":["styled","React","forwardRef","useContext","useState","ListItemDetail","Text","IconPlaceholder","Truncate","HoverDisclosureContext","HoverDisclosure","undefinedCoalesce","useWrapEvent","ListItemContext","ListItemLabel","ListItemLayout","ListItemLayoutAccessory","ListItemWrapper","createSafeRel","getDetailOptions","listItemDimensions","TruncateWrapper","children","color","fontSize","lineHeight","ListItemInternal","props","ref","className","current","propsDensity","density","description","detail","disabled","href","icon","itemRole","propsKeyColor","keyColor","onBlur","onClick","onKeyDown","onKeyUp","onMouseEnter","onMouseLeave","rel","role","selected","target","truncate","restProps","contextDensity","iconGutter","contextKeyColor","itemDimensions","focusVisible","setFocusVisible","hovered","setHovered","labelColor","descriptionColor","handleOnBlur","event","handleOnClick","handleOnKeyDown","handleOnKeyUp","handleOnMouseEnter","handleOnMouseLeave","console","warn","Wrapper","renderedChildren","labelFontSize","labelLineHeight","renderedDescription","descriptionFontSize","descriptionLineHeight","accessory","content","hoverDisclosure","renderedDetail","px","statefulProps","LabelCreator","height","undefined","Layout","listItemContent","iconGap","iconSize","py","visible","displayName","ListItem"],"mappings":"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","sourcesContent":["/*\n\n MIT License\n\n Copyright (c) 2021 Looker Data Sciences, Inc.\n\n Permission is hereby granted, free of charge, to any person obtaining a copy\n of this software and associated documentation files (the \"Software\"), to deal\n in the Software without restriction, including without limitation the rights\n to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n copies of the Software, and to permit persons to whom the Software is\n furnished to do so, subject to the following conditions:\n\n The above copyright notice and this permission notice shall be included in all\n copies or substantial portions of the Software.\n\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n SOFTWARE.\n\n */\n\nimport { CompatibleHTMLProps, FontSizes } from '@looker/design-tokens'\nimport styled from 'styled-components'\nimport React, {\n  FC,\n  forwardRef,\n  ReactNode,\n  Ref,\n  useContext,\n  useState,\n} from 'react'\nimport { ListItemDetail } from '../List/ListItemDetail'\nimport { Text } from '../Text'\nimport { IconPlaceholder, IconType } from '../Icon'\nimport { Truncate } from '../Truncate'\nimport {\n  HoverDisclosureContext,\n  HoverDisclosure,\n  undefinedCoalesce,\n  useWrapEvent,\n} from '../utils'\nimport { ListItemContext } from './ListItemContext'\nimport { ListItemLabel } from './ListItemLabel'\nimport { ListItemLayout } from './ListItemLayout'\nimport { ListItemLayoutAccessory } from './ListItemLayoutAccessory'\nimport { ListItemWrapper } from './ListItemWrapper'\nimport {\n  DensityRamp,\n  Detail,\n  ListItemRole,\n  ListItemStatefulProps,\n} from './types'\nimport { createSafeRel, getDetailOptions, listItemDimensions } from './utils'\n\nconst TruncateWrapper: FC<{\n  color?: string\n  fontSize?: FontSizes\n  lineHeight?: FontSizes\n}> = ({ children, color, fontSize, lineHeight }) => (\n  <Text color={color} fontSize={fontSize} lineHeight={lineHeight}>\n    <Truncate>{children}</Truncate>\n  </Text>\n)\n\nexport interface ListItemProps\n  extends CompatibleHTMLProps<HTMLElement>,\n    ListItemStatefulProps {\n  /**\n   * Determines color of child if child is a string\n   */\n  color?: string\n  /**\n   * Determines the sizing and spacing of the item\n   * Notes:\n   * - This prop is intended for internal components usage (density should be set on a parent List component for external use cases).\n   * - If you choose to use this prop on a ListItem directly, it must be consistent across all items for windowing purposes.\n   * @private\n   */\n  density?: DensityRamp\n  /**\n   * optional extra description\n   * I18n recommended: content that is user visible should be treated for i18n\n   */\n  description?: ReactNode\n  /**\n   * Detail element placed right of the item children. Prop value can take one of two forms:\n   * 1. ReactNode\n   * 2. Object with content and options properties\n   *\n   * I18n recommended: content that is user visible should be treated for i18n\n   */\n  detail?: Detail\n  /**\n   * Optional icon placed left of the item children\n   */\n  icon?: IconType\n  /**\n   * Sets the correct accessible role for the ListItem:\n   * - Use **'link'** for items that navigation to another page\n   * - Use **'button'** for items that trigger in page interactions, like displaying a dialog\n   * - Use **'none'** when including buttons as children in the label container (i.e. the label container will be a <div>).\n   *     NOTE: Height when using an item with a description and role='none' does not auto abide the @looker/components\n   *     density scale. Use 'button' or 'link' whenever possible to avoid space inconsistencies.\n   * @default 'button'\n   */\n  itemRole?: ListItemRole\n  /**\n   * If true, text children and description will be truncated if text overflows\n   */\n  truncate?: boolean\n}\n\nconst ListItemInternal = forwardRef(\n  (props: ListItemProps, ref: Ref<HTMLLIElement>) => {\n    const {\n      children,\n      className,\n      color,\n      current,\n      density: propsDensity,\n      description,\n      detail,\n      disabled = false,\n      href,\n      icon,\n      itemRole,\n      keyColor: propsKeyColor,\n      onBlur,\n      onClick,\n      onKeyDown,\n      onKeyUp,\n      onMouseEnter,\n      onMouseLeave,\n      rel,\n      role,\n      selected,\n      target,\n      truncate,\n      ...restProps\n    } = props\n\n    const {\n      density: contextDensity,\n      iconGutter,\n      keyColor: contextKeyColor,\n    } = useContext(ListItemContext)\n\n    const itemDimensions = listItemDimensions(propsDensity || contextDensity)\n    const keyColor = undefinedCoalesce([propsKeyColor, contextKeyColor])\n\n    const [focusVisible, setFocusVisible] = useState(false)\n    const [hovered, setHovered] = useState(false)\n\n    const labelColor = disabled ? 'text1' : color\n    const descriptionColor = disabled ? 'text1' : 'text2'\n\n    const handleOnBlur = (event: React.FocusEvent<HTMLElement>) => {\n      setFocusVisible(false)\n      onBlur && onBlur(event)\n    }\n\n    const handleOnClick = (event: React.MouseEvent<HTMLElement>) => {\n      setFocusVisible(false)\n      onClick && onClick(event)\n    }\n\n    const handleOnKeyDown = (event: React.KeyboardEvent<HTMLElement>) => {\n      onKeyDown && onKeyDown(event)\n      setFocusVisible(true)\n    }\n\n    const handleOnKeyUp = (event: React.KeyboardEvent<HTMLElement>) => {\n      onKeyUp && onKeyUp(event)\n      setFocusVisible(true)\n    }\n\n    const handleOnMouseEnter = useWrapEvent(\n      () => setHovered(true),\n      onMouseEnter\n    )\n    const handleOnMouseLeave = useWrapEvent(\n      () => setHovered(false),\n      onMouseLeave\n    )\n\n    if (disabled && itemRole === 'link') {\n      // eslint-disable-next-line no-console\n      console.warn(\n        'itemRole=\"link\" and disabled cannot be combined - use itemRole=\"button\" if you need to offer a disabled ListItem'\n      )\n    }\n\n    const Wrapper = truncate ? TruncateWrapper : Text\n\n    const renderedChildren = (\n      <Wrapper\n        color={labelColor}\n        fontSize={itemDimensions.labelFontSize}\n        lineHeight={itemDimensions.labelLineHeight}\n      >\n        {children}\n      </Wrapper>\n    )\n\n    const renderedDescription = (\n      <Wrapper\n        color={descriptionColor}\n        fontSize={itemDimensions.descriptionFontSize}\n        lineHeight={itemDimensions.descriptionLineHeight}\n      >\n        {description}\n      </Wrapper>\n    )\n\n    const { accessory, content, hoverDisclosure } = getDetailOptions(detail)\n\n    const renderedDetail = detail && (\n      <HoverDisclosure visible={!hoverDisclosure}>\n        <ListItemDetail pr={accessory ? itemDimensions.px : '0'}>\n          {content}\n        </ListItemDetail>\n      </HoverDisclosure>\n    )\n\n    const statefulProps = {\n      current,\n      disabled,\n      hovered,\n      keyColor,\n      selected,\n    }\n\n    const LabelCreator: FC<{\n      children: ReactNode\n      className: string\n    }> = ({ children, className }) => (\n      <ListItemLabel\n        itemRole={itemRole}\n        aria-current={current}\n        aria-selected={selected}\n        className={className}\n        height={itemDimensions.height}\n        href={href}\n        onBlur={handleOnBlur}\n        onClick={disabled ? undefined : handleOnClick}\n        onKeyDown={handleOnKeyDown}\n        onKeyUp={handleOnKeyUp}\n        rel={createSafeRel(rel, target)}\n        role={role || 'listitem'}\n        target={target}\n        tabIndex={-1}\n        {...statefulProps}\n      >\n        {children}\n      </ListItemLabel>\n    )\n\n    const Layout = accessory ? ListItemLayoutAccessory : ListItemLayout\n    const listItemContent = (\n      <Layout\n        color={color}\n        description={renderedDescription}\n        detail={renderedDetail}\n        disabled={disabled}\n        icon={icon || (iconGutter && <IconPlaceholder />)}\n        iconGap={itemDimensions.iconGap}\n        iconSize={itemDimensions.iconSize}\n        labelCreator={LabelCreator}\n        px={itemDimensions.px}\n        py={itemRole === 'none' ? 'none' : itemDimensions.py}\n      >\n        {renderedChildren}\n      </Layout>\n    )\n\n    return (\n      <HoverDisclosureContext.Provider value={{ visible: hovered }}>\n        <ListItemWrapper\n          className={className}\n          description={description}\n          disabled={disabled}\n          focusVisible={focusVisible}\n          onMouseEnter={handleOnMouseEnter}\n          onMouseLeave={handleOnMouseLeave}\n          ref={ref}\n          {...itemDimensions}\n          {...restProps}\n        >\n          {listItemContent}\n        </ListItemWrapper>\n      </HoverDisclosureContext.Provider>\n    )\n  }\n)\n\nListItemInternal.displayName = 'ListItemInternal'\n\nexport const ListItem = styled(ListItemInternal)``\n"],"file":"ListItem.js"}