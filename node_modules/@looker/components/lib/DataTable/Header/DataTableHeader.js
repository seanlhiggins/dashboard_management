function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

import "core-js/modules/es.array.map.js";
import "core-js/modules/es.object.assign.js";
import React, { useContext } from 'react';
import { useID } from '../../utils/useID';
import { DataTableRow } from '../Item/DataTableRow';
import { DataTableContext } from '../DataTableContext';
import { DataTableHeaderCell } from './DataTableHeaderCell';
export var DataTableHeader = function DataTableHeader(_ref) {
  var id = _ref.id;

  var _useContext = useContext(DataTableContext),
      allSelected = _useContext.allSelected,
      columns = _useContext.columns,
      select = _useContext.select;

  var hasCheckbox = !!select;

  var onChange = function onChange() {
    return select ? select.onSelectAll() : undefined;
  };

  var headerColumns = columns && columns.map(function (column) {
    return React.createElement(DataTableHeaderCell, _extends({}, column, {
      key: column.id
    }));
  });
  return React.createElement(DataTableRow, {
    checked: allSelected,
    id: useID(id),
    isHeaderRow: true,
    hasCheckbox: hasCheckbox,
    onChange: onChange
  }, headerColumns);
};
//# sourceMappingURL=DataTableHeader.js.map