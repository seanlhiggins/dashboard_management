{"version":3,"sources":["../../../src/DataTable/Item/DataTableItem.tsx"],"names":["React","useContext","useRef","useTranslation","styled","MoreVert","IconButton","Menu","DataTableContext","DataTableRow","ItemTarget","ItemTargetGroup","DataTableItemLayout","props","t","actionsTooltipText","actions","actionsTooltip","children","className","disabled","id","onClick","actionPrimary","ref","select","handleClick","undefined","handleKeyDown","event","isEventFromChild","currentTarget","target","keyCode","click","ItemActions","onChange","onSelect","checked","selectedItems","includes","DataTableItem"],"mappings":"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","sourcesContent":["/*\n\n MIT License\n\n Copyright (c) 2021 Looker Data Sciences, Inc.\n\n Permission is hereby granted, free of charge, to any person obtaining a copy\n of this software and associated documentation files (the \"Software\"), to deal\n in the Software without restriction, including without limitation the rights\n to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n copies of the Software, and to permit persons to whom the Software is\n furnished to do so, subject to the following conditions:\n\n The above copyright notice and this permission notice shall be included in all\n copies or substantial portions of the Software.\n\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n SOFTWARE.\n\n */\n\nimport React, { FC, ReactNode, useContext, useRef } from 'react'\nimport { useTranslation } from 'react-i18next'\nimport styled from 'styled-components'\nimport { CompatibleHTMLProps } from '@looker/design-tokens'\nimport { MoreVert } from '@styled-icons/material/MoreVert'\nimport { IconButton } from '../../Button'\nimport { Menu } from '../../Menu'\nimport { DataTableContext } from '../DataTableContext'\nimport { DataTableRow } from './DataTableRow'\nimport { ItemTarget, ItemTargetGroup } from './ItemTarget'\n\nexport interface DataTableItemProps\n  extends CompatibleHTMLProps<HTMLDivElement> {\n  /**\n   *  The available actions for this item\n   */\n  actions?: ReactNode\n  /**\n   *  Sets the tooltip text and a hidden text label for the actions button (accessible to assistive technology)\n   *  If unprovided by the user, a default string will be used instead\n   * I18n recommended: content that is user visible should be treated for i18n\n   *  @default 'Options'\n   */\n  actionsTooltip?: string\n  /**\n   *  The id of this item\n   */\n  id: string\n  /**\n   * A boolean indicating whether this item is selectable or not (the item will appear greyed out if true)\n   */\n  disabled?: boolean\n  /**\n   * I18n recommended: content that is user visible should be treated for i18n\n   */\n  children: JSX.Element | JSX.Element[]\n  /*\n   * A ReactNode (IconButton) that will be placed as a primary action on the right side of the row\n   */\n  actionPrimary?: ReactNode\n}\n\nconst DataTableItemLayout: FC<DataTableItemProps> = (props) => {\n  const { t } = useTranslation('DataTableItem')\n  const actionsTooltipText = t('Options')\n  const {\n    actions,\n    actionsTooltip = actionsTooltipText,\n    children,\n    className,\n    disabled,\n    id,\n    onClick,\n    actionPrimary,\n  } = props\n  const ref = useRef<HTMLTableRowElement>(null)\n  const { select } = useContext(DataTableContext)\n\n  const handleClick = disabled ? undefined : onClick || undefined\n\n  const handleKeyDown = (event: React.KeyboardEvent<HTMLDivElement>) => {\n    const isEventFromChild = event.currentTarget !== event.target\n    if (event.keyCode === 13 && !isEventFromChild) {\n      event.currentTarget.click()\n    }\n  }\n\n  const ItemActions = (actionPrimary || actions) && (\n    <ItemTargetGroup>\n      {actionPrimary && <ItemTarget>{actionPrimary}</ItemTarget>}\n      {actions && (\n        <ItemTarget>\n          <Menu content={actions}>\n            <IconButton\n              icon={<MoreVert />}\n              label={actionsTooltip}\n              size=\"small\"\n              tabIndex={-1}\n            />\n          </Menu>\n        </ItemTarget>\n      )}\n    </ItemTargetGroup>\n  )\n\n  const onChange = select ? () => select.onSelect(id) : undefined\n\n  const checked = select && select.selectedItems.includes(id)\n  return (\n    <DataTableRow\n      checked={checked}\n      className={className}\n      disabled={disabled}\n      hasCheckbox={!!select}\n      id={id}\n      onChange={onChange}\n      onClick={handleClick}\n      onKeyDown={handleKeyDown}\n      ref={ref}\n      secondary={ItemActions}\n      tabIndex={0}\n    >\n      {children}\n    </DataTableRow>\n  )\n}\n\nexport const DataTableItem = styled(DataTableItemLayout)``\n"],"file":"DataTableItem.js"}