import "core-js/modules/es.object.assign.js";

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

import { reset, fadeIn } from '@looker/design-tokens';
import React, { forwardRef, useContext, useRef } from 'react';
import styled from 'styled-components';
import { useGlobalHotkeys, useForkedRef } from '../utils';
import { DialogContext } from '../Dialog';
var OverlaySurfaceLayout = forwardRef(function (props, forwardedRef) {
  var children = props.children,
      className = props.className,
      eventHandlers = props.eventHandlers,
      placement = props.placement,
      style = props.style;

  var _useContext = useContext(DialogContext),
      closeModal = _useContext.closeModal;

  var innerRef = useRef(null);
  var ref = useForkedRef(forwardedRef, innerRef);
  useGlobalHotkeys('esc', closeModal, innerRef);
  return React.createElement("div", _extends({
    ref: ref,
    style: style,
    className: className
  }, eventHandlers, {
    tabIndex: -1,
    "data-placement": placement
  }), React.createElement(OverlaySurfaceContentArea, {
    tabIndex: -1,
    "data-overlay-surface": true
  }, children));
});
OverlaySurfaceLayout.displayName = 'OverlaySurfaceLayout';
export var OverlaySurface = styled(OverlaySurfaceLayout).withConfig({
  displayName: "OverlaySurface",
  componentId: "wd3uv8-0"
})(["", " animation:", " ease-in;animation-duration:", ";max-width:", ";overflow:visible;z-index:", ";&[data-placement*='top']{padding-bottom:", ";}&[data-placement*='right']{padding-left:", ";}&[data-placement*='bottom']{padding-top:", ";}&[data-placement*='left']{padding-right:", ";}&:focus{outline:none;}"], reset, fadeIn, function (_ref) {
  var theme = _ref.theme;
  return "".concat(theme.transitions.quick, "ms");
}, function (_ref2) {
  var maxWidth = _ref2.maxWidth;
  return maxWidth;
}, function (_ref3) {
  var zIndexFloor = _ref3.theme.zIndexFloor;
  return zIndexFloor || undefined;
}, function (_ref4) {
  var space = _ref4.theme.space;
  return space.xsmall;
}, function (_ref5) {
  var space = _ref5.theme.space;
  return space.xsmall;
}, function (_ref6) {
  var space = _ref6.theme.space;
  return space.xsmall;
}, function (_ref7) {
  var space = _ref7.theme.space;
  return space.xsmall;
});
export var OverlaySurfaceContentArea = styled.div.withConfig({
  displayName: "OverlaySurface__OverlaySurfaceContentArea",
  componentId: "wd3uv8-1"
})(["background:", ";border-radius:", ";box-shadow:", ";color:", ";&:focus{outline:none;}"], function (_ref8) {
  var theme = _ref8.theme;
  return theme.colors.background;
}, function (_ref9) {
  var theme = _ref9.theme;
  return theme.radii.medium;
}, function (_ref10) {
  var theme = _ref10.theme;
  return theme.shadows[3];
}, function (_ref11) {
  var theme = _ref11.theme;
  return theme.colors.text;
});
//# sourceMappingURL=OverlaySurface.js.map