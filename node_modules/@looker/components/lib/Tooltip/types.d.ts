import { Transitions } from '@looker/design-tokens';
import { Placement } from '@popperjs/core';
import { Property } from 'csstype';
import { MouseEvent, ReactElement, ReactNode } from 'react';
import { MenuDomProps } from '../Menu';
export declare type TooltipRenderProp = (props: UseTooltipResponseDom) => ReactNode;
export interface UseTooltipProps {
    canClose?: () => boolean;
    isOpen?: boolean;
    placement?: Placement;
    content?: ReactNode;
    width?: string;
    maxWidth?: string;
    textAlign?: Property.TextAlign;
    id?: string;
    invert?: boolean;
    triggerElement?: HTMLElement | null;
    disabled?: boolean;
    delay?: Transitions;
}
export interface UseTooltipResponseDom {
    'aria-describedby': string;
    className: string;
    onBlur: () => void;
    onFocus: () => void;
    onMouseOut: (event: MouseEvent<HTMLElement>) => void;
    onMouseOver: () => void;
    ref: (node: HTMLElement | null) => void;
}
export interface TooltipProps extends UseTooltipProps, Partial<MenuDomProps> {
    content: ReactNode;
    children: ReactElement<UseTooltipResponseDom & MenuDomProps> | TooltipRenderProp;
}
