import { ReactNode } from 'react';
export declare type PanelDirection = 'left' | 'right';
export declare type PanelRenderProp = (props: UsePanelResponseDom) => ReactNode;
export interface PanelProps extends Omit<UsePanelProps, 'content'> {
    children?: PanelRenderProp | ReactNode;
    content: ReactNode;
}
export interface PanelSurfaceProps {
    direction?: PanelDirection;
}
export interface UsePanelResponse {
    isOpen: boolean;
    setOpen: (open: boolean) => void;
    panel: ReactNode;
    domProps: UsePanelResponseDom;
}
export interface UsePanelProps {
    canClose?: () => boolean;
    content: ReactNode;
    defaultOpen?: boolean;
    direction?: PanelDirection;
    isOpen?: boolean;
    onClose?: () => void;
    setOpen?: (open: boolean) => void;
    title: string;
}
export interface UsePanelResponseDom {
    onClick: () => void;
    role: string;
    'aria-expanded': boolean;
}
