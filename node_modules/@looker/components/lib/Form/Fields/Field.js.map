{"version":3,"sources":["../../../src/Form/Fields/Field.tsx"],"names":["width","React","useContext","styled","css","omit","pick","Paragraph","Text","FieldsetContext","inputHeight","Label","VisuallyHidden","ValidationMessage","RequiredStar","fieldPropKeys","pickFieldProps","props","omitFieldProps","FieldLayout","className","children","description","detail","id","ariaLabelOnly","label","hideLabel","required","validationMessage","fieldsHideLabel","fieldDescription","fieldValidation","labelComponent","undefined","FieldDetail","attrs","color","fontSize","lineHeight","InputArea","div","MessageArea","fieldLabelCSS","inline","theme","space","small","lineHeights","xsmall","xxsmall","Field","autoResize"],"mappings":"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","sourcesContent":["/*\n\n MIT License\n\n Copyright (c) 2021 Looker Data Sciences, Inc.\n\n Permission is hereby granted, free of charge, to any person obtaining a copy\n of this software and associated documentation files (the \"Software\"), to deal\n in the Software without restriction, including without limitation the rights\n to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n copies of the Software, and to permit persons to whom the Software is\n furnished to do so, subject to the following conditions:\n\n The above copyright notice and this permission notice shall be included in all\n copies or substantial portions of the Software.\n\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n SOFTWARE.\n\n */\n\nimport { width, WidthProps } from '@looker/design-tokens'\nimport React, { FunctionComponent, useContext } from 'react'\nimport styled, { css } from 'styled-components'\nimport omit from 'lodash/omit'\nimport pick from 'lodash/pick'\nimport { Paragraph, Text } from '../../Text'\nimport { FieldsetContext } from '../Fieldset'\nimport { inputHeight } from '../Inputs/height'\nimport { Label } from '../Label'\nimport { VisuallyHidden } from '../../VisuallyHidden'\nimport { ValidationMessage } from '../ValidationMessage'\nimport { FieldBaseProps } from './FieldBase'\nimport { RequiredStar } from './RequiredStar'\n\nexport interface FieldProps extends FieldBaseProps, WidthProps {\n  /**\n   * Id of the input element to match a label to.\n   */\n  id?: string\n  /**\n   * Determines where to place the label in relation to the input.\n   * @default false\n   */\n  inline?: boolean\n  /**\n   * Hide label on Field\n   * @default false\n   */\n  hideLabel?: boolean\n  /**\n   *\n   */\n  ariaLabelOnly?: boolean\n}\n\nexport const fieldPropKeys = [\n  'description',\n  'detail',\n  'id',\n  'inline',\n  'label',\n  'hideLabel',\n  'labelWidth',\n  'validationMessage',\n  'width',\n]\n\nexport const pickFieldProps = (props: FieldProps) =>\n  pick(props, [\n    ...fieldPropKeys,\n    'disabled',\n    'required',\n    'className',\n    'autoResize',\n  ])\n\nexport const omitFieldProps = (props: FieldProps) => omit(props, fieldPropKeys)\n\n/**\n * `<Field />` allows the rendering of a label (optionally associated with a child input like `<InputText />`),\n * and can render a validation message. Generally, this component is used with form inputs to give user\n * feedback about the status of the input values.\n */\n\ninterface FieldPropsInternal extends FieldProps {\n  id: string\n}\n\nconst FieldLayout: FunctionComponent<FieldPropsInternal> = ({\n  className,\n  children,\n  description,\n  detail,\n  id,\n  ariaLabelOnly,\n  label,\n  hideLabel,\n  required,\n  validationMessage,\n}) => {\n  const { fieldsHideLabel } = useContext(FieldsetContext)\n\n  const fieldDescription = description && (\n    <Paragraph mt=\"xsmall\" fontSize=\"xsmall\" color=\"text2\">\n      {description}\n    </Paragraph>\n  )\n\n  const fieldValidation = validationMessage && (\n    <ValidationMessage {...validationMessage} />\n  )\n\n  const labelComponent = (\n    <Label htmlFor={ariaLabelOnly ? undefined : id} id={`labelledby-${id}`}>\n      {label}\n      {required && <RequiredStar />}\n    </Label>\n  )\n\n  return (\n    <div className={className}>\n      {(fieldsHideLabel || hideLabel) && hideLabel !== false ? (\n        <VisuallyHidden>{labelComponent}</VisuallyHidden>\n      ) : (\n        labelComponent\n      )}\n      {detail && <FieldDetail>{detail}</FieldDetail>}\n      <InputArea>{children}</InputArea>\n      <MessageArea id={`describedby-${id}`}>\n        {fieldDescription}\n        {fieldValidation}\n      </MessageArea>\n    </div>\n  )\n}\n\nconst FieldDetail = styled(Text).attrs(() => ({\n  color: 'inherit',\n  fontSize: 'xsmall',\n  lineHeight: 'xsmall',\n}))``\n\nconst InputArea = styled.div`\n  /* Workaround for Chip's truncate styling breaking flexbox layout in FieldChips */\n  min-width: 0;\n`\nconst MessageArea = styled.div``\n\nconst fieldLabelCSS = (inline?: boolean) =>\n  inline\n    ? css`\n        height: ${inputHeight};\n        justify-self: end;\n        line-height: ${inputHeight};\n        padding-right: ${({ theme }) => theme.space.small};\n        text-align: right;\n      `\n    : css`\n        line-height: ${({ theme }) => theme.lineHeights.xsmall};\n        padding-bottom: ${({ theme }) => theme.space.xxsmall};\n      `\n\nexport const Field = styled(FieldLayout)<FieldPropsInternal>`\n  align-items: left;\n\n  display: ${({ autoResize }) => (autoResize ? 'inline-grid' : 'grid')};\n  grid-template-areas: ${({ inline }) =>\n    inline\n      ? '\"label input detail\" \". messages messages\"'\n      : '\"label detail\" \"input input\" \"messages messages\"'};\n  grid-template-columns: ${({ inline }) => (inline ? '150px 1fr' : undefined)};\n  height: fit-content;\n  justify-content: space-between;\n  width: ${({ autoResize }) => (autoResize ? 'fit-content' : '100%')};\n  ${width}\n\n  ${InputArea} {\n    align-items: center;\n    ${({ autoResize }) =>\n      autoResize &&\n      css`\n        align-items: stretch;\n        display: flex;\n        flex-direction: column;\n      `}\n    grid-area: input;\n  }\n\n  ${MessageArea} {\n    grid-area: messages;\n  }\n\n  & > ${Label} {\n    grid-area: label;\n    ${({ inline }) => fieldLabelCSS(inline)}\n  }\n\n  ${FieldDetail} {\n    grid-area: detail;\n    justify-self: end;\n    padding-left: ${({ theme: { space } }) => space.small};\n\n    ${({ inline }) =>\n      inline &&\n      css`\n        align-self: center;\n      `}\n  }\n\n  ${ValidationMessage} {\n    margin-top: ${({ theme }) => theme.space.xsmall};\n  }\n`\n"],"file":"Field.js"}