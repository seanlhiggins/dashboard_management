import { CompatibleHTMLProps, FlexboxProps, LayoutProps, TypographyProps, SpaceProps } from '@looker/design-tokens';
import React from 'react';
import { ComboboxCallback, ComboboxMultiCallback, ComboboxOptionObject } from './types';
export interface ComboboxBaseProps extends FlexboxProps, Omit<LayoutProps, 'size'>, SpaceProps, TypographyProps, Omit<CompatibleHTMLProps<HTMLDivElement>, 'readOnly' | 'onChange' | 'value' | 'defaultValue'> {
}
export interface ComboboxCommonProps<TCallback extends ComboboxCallback | ComboboxMultiCallback = ComboboxCallback> {
    openOnFocus?: boolean;
    openOnClick?: boolean;
    onChange?: TCallback;
    onClose?: TCallback;
    onOpen?: TCallback;
}
export interface ComboboxProps extends ComboboxBaseProps, ComboboxCommonProps {
    value?: ComboboxOptionObject;
    defaultValue?: ComboboxOptionObject;
}
export declare const ComboboxInternal: React.ForwardRefExoticComponent<ComboboxProps & React.RefAttributes<HTMLDivElement>>;
export declare const ComboboxWrapper: React.ForwardRefExoticComponent<ComboboxBaseProps & {
    isVisible: boolean;
} & React.RefAttributes<HTMLDivElement>>;
export declare const Combobox: import("styled-components").StyledComponent<React.ForwardRefExoticComponent<ComboboxProps & React.RefAttributes<HTMLDivElement>>, import("styled-components").DefaultTheme, {
    display: (string & {}) | ("-moz-initial" | "inherit" | "initial" | "revert" | "unset" | (string & {}) | "none" | "ruby" | "table" | "flex" | "grid" | "contents" | "block" | "inline" | "run-in" | "-ms-flexbox" | "-ms-grid" | "-webkit-flex" | "flow" | "flow-root" | "ruby-base" | "ruby-base-container" | "ruby-text" | "ruby-text-container" | "table-caption" | "table-cell" | "table-column" | "table-column-group" | "table-footer-group" | "table-header-group" | "table-row" | "table-row-group" | "-ms-inline-flexbox" | "-ms-inline-grid" | "-webkit-inline-flex" | "inline-block" | "inline-flex" | "inline-grid" | "inline-list-item" | "inline-table" | "list-item" | null)[] | {
        [x: string]: "-moz-initial" | "inherit" | "initial" | "revert" | "unset" | (string & {}) | "none" | "ruby" | "table" | "flex" | "grid" | "contents" | "block" | "inline" | "run-in" | "-ms-flexbox" | "-ms-grid" | "-webkit-flex" | "flow" | "flow-root" | "ruby-base" | "ruby-base-container" | "ruby-text" | "ruby-text-container" | "table-caption" | "table-cell" | "table-column" | "table-column-group" | "table-footer-group" | "table-header-group" | "table-row" | "table-row-group" | "-ms-inline-flexbox" | "-ms-inline-grid" | "-webkit-inline-flex" | "inline-block" | "inline-flex" | "inline-grid" | "inline-list-item" | "inline-table" | "list-item" | undefined;
        [x: number]: "-moz-initial" | "inherit" | "initial" | "revert" | "unset" | (string & {}) | "none" | "ruby" | "table" | "flex" | "grid" | "contents" | "block" | "inline" | "run-in" | "-ms-flexbox" | "-ms-grid" | "-webkit-flex" | "flow" | "flow-root" | "ruby-base" | "ruby-base-container" | "ruby-text" | "ruby-text-container" | "table-caption" | "table-cell" | "table-column" | "table-column-group" | "table-footer-group" | "table-header-group" | "table-row" | "table-row-group" | "-ms-inline-flexbox" | "-ms-inline-grid" | "-webkit-inline-flex" | "inline-block" | "inline-flex" | "inline-grid" | "inline-list-item" | "inline-table" | "list-item" | undefined;
    } | null;
}, "display">;
