import { CompatibleHTMLProps } from '@looker/design-tokens';
import React from 'react';
import { ComboboxOptionProps, HighlightTextProps } from './types';
interface ComboboxOptionWrapperProps extends ComboboxOptionProps {
    isSelected?: boolean;
}
export declare const ComboboxOptionWrapper: import("styled-components").StyledComponent<React.ForwardRefExoticComponent<ComboboxOptionWrapperProps & React.RefAttributes<HTMLLIElement>>, import("styled-components").DefaultTheme, {}, never>;
export declare const comboboxOptionStyle: import("styled-components").FlattenInterpolation<import("styled-components").ThemeProps<import("styled-components").DefaultTheme>>;
export declare const ComboboxOption: import("styled-components").StyledComponent<React.ForwardRefExoticComponent<ComboboxOptionProps & React.RefAttributes<HTMLLIElement>>, import("styled-components").DefaultTheme, {
    color: string | number | symbol | (string | number | symbol | null)[] | {
        [x: string]: string | number | symbol | undefined;
        [x: number]: string | number | symbol | undefined;
    } | null;
    display: (string & {}) | ("-moz-initial" | "inherit" | "initial" | "revert" | "unset" | (string & {}) | "none" | "ruby" | "table" | "flex" | "grid" | "contents" | "block" | "inline" | "run-in" | "-ms-flexbox" | "-ms-grid" | "-webkit-flex" | "flow" | "flow-root" | "ruby-base" | "ruby-base-container" | "ruby-text" | "ruby-text-container" | "table-caption" | "table-cell" | "table-column" | "table-column-group" | "table-footer-group" | "table-header-group" | "table-row" | "table-row-group" | "-ms-inline-flexbox" | "-ms-inline-grid" | "-webkit-inline-flex" | "inline-block" | "inline-flex" | "inline-grid" | "inline-list-item" | "inline-table" | "list-item" | null)[] | {
        [x: string]: "-moz-initial" | "inherit" | "initial" | "revert" | "unset" | (string & {}) | "none" | "ruby" | "table" | "flex" | "grid" | "contents" | "block" | "inline" | "run-in" | "-ms-flexbox" | "-ms-grid" | "-webkit-flex" | "flow" | "flow-root" | "ruby-base" | "ruby-base-container" | "ruby-text" | "ruby-text-container" | "table-caption" | "table-cell" | "table-column" | "table-column-group" | "table-footer-group" | "table-header-group" | "table-row" | "table-row-group" | "-ms-inline-flexbox" | "-ms-inline-grid" | "-webkit-inline-flex" | "inline-block" | "inline-flex" | "inline-grid" | "inline-list-item" | "inline-table" | "list-item" | undefined;
        [x: number]: "-moz-initial" | "inherit" | "initial" | "revert" | "unset" | (string & {}) | "none" | "ruby" | "table" | "flex" | "grid" | "contents" | "block" | "inline" | "run-in" | "-ms-flexbox" | "-ms-grid" | "-webkit-flex" | "flow" | "flow-root" | "ruby-base" | "ruby-base-container" | "ruby-text" | "ruby-text-container" | "table-caption" | "table-cell" | "table-column" | "table-column-group" | "table-footer-group" | "table-header-group" | "table-row" | "table-row-group" | "-ms-inline-flexbox" | "-ms-inline-grid" | "-webkit-inline-flex" | "inline-block" | "inline-flex" | "inline-grid" | "inline-list-item" | "inline-table" | "list-item" | undefined;
    } | null;
    fontSize: import("styled-system").ResponsiveValue<import("@looker/design-tokens").FontSizes, Required<import("styled-system").Theme<import("styled-system").TLengthStyledSystem>>>;
    lineHeight: import("styled-system").ResponsiveValue<import("@looker/design-tokens").FontSizes, Required<import("styled-system").Theme<import("styled-system").TLengthStyledSystem>>>;
    px: string | number | symbol | (string | number | symbol | null)[] | {
        [x: string]: string | number | symbol | undefined;
        [x: number]: string | number | symbol | undefined;
    } | null;
    py: string | number | symbol | (string | number | symbol | null)[] | {
        [x: string]: string | number | symbol | undefined;
        [x: number]: string | number | symbol | undefined;
    } | null;
}, "color" | "display" | "fontSize" | "lineHeight" | "px" | "py">;
export declare function ComboboxOptionTextInternal({ highlightText, ...props }: CompatibleHTMLProps<HTMLSpanElement> & HighlightTextProps): JSX.Element;
export declare const ComboboxOptionText: import("styled-components").StyledComponent<typeof ComboboxOptionTextInternal, import("styled-components").DefaultTheme, {}, never>;
export {};
