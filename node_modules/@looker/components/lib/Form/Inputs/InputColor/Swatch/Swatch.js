import styled from 'styled-components';
import { disabledSwatchColor, reset, shouldForwardProp } from '@looker/design-tokens';
import { height, width } from 'styled-system';
import { inputCSS, inputTextHover, inputTextDisabled } from '../../../Inputs/InputText';
import { inputHeight } from '../../height';
var emptySwatch = "position: relative;\n  &:after {\n    position: absolute;\n    display: block;\n    content: '';\n    height: 1px;\n    width: calc(100% + 12px);\n    background: red;\n    top: 50%;\n    margin-left: -6px;\n    transform: rotate(-45deg);\n  }";
export var Swatch = styled.div.withConfig({
  shouldForwardProp: shouldForwardProp
}).attrs(function (_ref) {
  var _ref$color = _ref.color,
      color = _ref$color === void 0 ? 'transparent' : _ref$color,
      _ref$height = _ref.height,
      height = _ref$height === void 0 ? inputHeight : _ref$height,
      _ref$width = _ref.width,
      width = _ref$width === void 0 ? inputHeight : _ref$width;
  return {
    color: color,
    'data-testid': 'swatch',
    height: height,
    width: width
  };
}).withConfig({
  displayName: "Swatch",
  componentId: "sc-1ldlx27-0"
})(["", " ", " ", " ", " background-color:", ";flex-shrink:0;margin-top:auto;&:disabled{", "}&:hover:not([disabled]){", "}", ""], reset, inputCSS, width, height, function (_ref2) {
  var color = _ref2.color,
      disabled = _ref2.disabled;
  return disabled ? disabledSwatchColor(color) : color;
}, inputTextDisabled, inputTextHover, function (props) {
  return props.color === 'transparent' && emptySwatch;
});
//# sourceMappingURL=Swatch.js.map