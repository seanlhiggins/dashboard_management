import { AriaAttributes } from 'react';
import { ValidationType } from '../../../ValidationMessage';
declare const ariaKeys: readonly ["aria-describedby", "aria-invalid", "aria-label", "aria-labelledby"];
declare type SelectedAriaAttributes = Pick<AriaAttributes, typeof ariaKeys[number]>;
export interface AriaAndValidationProps extends SelectedAriaAttributes {
    validationType?: ValidationType;
}
export declare function pickAriaAndValidationProps({ validationType, ...props }: AriaAndValidationProps): {
    'aria-invalid': boolean;
    'aria-describedby'?: string | undefined;
    'aria-label'?: string | undefined;
    'aria-labelledby'?: string | undefined;
};
export declare function omitAriaAndValidationProps(props: AriaAndValidationProps): Pick<AriaAndValidationProps, never>;
export {};
