import { LayoutProps } from '@looker/design-tokens';
import React from 'react';
import { ValidationType } from '../../ValidationMessage';
import { ComboboxOptionIndicatorProps, ComboboxProps } from '../Combobox';
import { SelectOptionsBaseProps } from './SelectOptions';
import { SelectOptionProps } from './types';
export interface SelectBaseProps extends SelectOptionsBaseProps, Pick<ComboboxOptionIndicatorProps, 'indicator'> {
    options?: SelectOptionProps[];
    placeholder?: string;
    isClearable?: boolean;
    onFilter?: (term: string) => void;
    listLayout?: LayoutProps;
    validationType?: ValidationType;
    windowedOptions?: boolean;
}
export interface SelectProps extends Omit<ComboboxProps, 'value' | 'defaultValue' | 'onChange'>, SelectBaseProps {
    autoResize?: boolean;
    value?: string;
    defaultValue?: string;
    onChange?: (value: string) => void;
}
export declare const Select: import("styled-components").StyledComponent<React.ForwardRefExoticComponent<SelectProps & React.RefAttributes<HTMLInputElement>>, import("styled-components").DefaultTheme, {}, never>;
