import { SpaceProps } from '@looker/design-tokens';
import React, { MouseEvent, ReactNode } from 'react';
import { InputProps, InputTextTypeProps } from '../InputProps';
import { SimpleLayoutProps } from '../../../Layout/utils/simple';
import { IconType } from '../../../Icon';
export interface InputTextBaseProps extends Omit<SimpleLayoutProps, 'size'>, Omit<InputProps, 'type'>, InputTextTypeProps {
    autoResize?: boolean;
    onClick?: (e: MouseEvent<HTMLDivElement>) => void;
    onMouseDown?: (e: MouseEvent<HTMLDivElement>) => void;
    onMouseEnter?: (e: MouseEvent<HTMLDivElement>) => void;
    onMouseLeave?: (e: MouseEvent<HTMLDivElement>) => void;
    onMouseOver?: (e: MouseEvent<HTMLDivElement>) => void;
    onMouseOut?: (e: MouseEvent<HTMLDivElement>) => void;
    onMouseUp?: (e: MouseEvent<HTMLDivElement>) => void;
}
export interface InputTextProps extends InputTextBaseProps {
    after?: ReactNode;
    iconAfter?: IconType;
    before?: ReactNode;
    iconBefore?: IconType;
}
export declare const inputTextHover: import("styled-components").FlattenInterpolation<import("styled-components").ThemeProps<import("styled-components").DefaultTheme>>;
export declare const inputTextFocus: import("styled-components").FlattenInterpolation<import("styled-components").ThemeProps<import("styled-components").DefaultTheme>>;
export declare const inputTextDisabled: import("styled-components").FlattenInterpolation<import("styled-components").ThemeProps<import("styled-components").DefaultTheme>>;
export declare const ErrorIcon: import("styled-components").StyledComponent<import("@styled-icons/styled-icon").StyledIcon, import("styled-components").DefaultTheme, {}, never>;
export declare const InputTextContent: import("styled-components").StyledComponent<"div", import("styled-components").DefaultTheme, SpaceProps<Required<import("styled-system").Theme<import("styled-system").TLengthStyledSystem>>, string | number | symbol>, never>;
export declare const inputTextValidation: import("styled-components").FlattenInterpolation<import("styled-components").ThemedStyledProps<{
    validationType?: "error" | undefined;
}, import("styled-components").DefaultTheme>>;
export declare const inputCSS: import("styled-components").FlattenInterpolation<import("styled-components").ThemeProps<import("styled-components").DefaultTheme>>;
export declare const InputText: import("styled-components").StyledComponent<React.ForwardRefExoticComponent<InputTextProps & React.RefAttributes<HTMLInputElement>>, import("styled-components").DefaultTheme, InputTextProps, never>;
