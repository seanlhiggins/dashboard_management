import React from 'react';
import { InputChipsCommonProps, InputChipsControlProps, InputChipsInputControlProps } from './InputChipsBase';
export interface InputChipsValidationProps {
    validate?: (value: string) => boolean;
    onValidationFail?: (values: string[]) => void;
    onDuplicate?: (values: string[]) => void;
}
export declare function splitInputValue(inputValue: string): string[];
export interface InputChipsProps extends Omit<InputChipsCommonProps, 'onValidationFail'>, InputChipsControlProps, Partial<InputChipsInputControlProps>, InputChipsValidationProps {
    parseInputValue?: (value: string) => string[];
}
export declare function validateValues(newValues: string[], currentValues: string[], validate?: (value: string) => boolean): {
    duplicateValues: string[];
    invalidValues: string[];
    unusedValues: string[];
    validValues: string[];
};
export declare const InputChipsInternal: React.ForwardRefExoticComponent<InputChipsProps & React.RefAttributes<HTMLInputElement>>;
export declare const InputChips: import("styled-components").StyledComponent<React.ForwardRefExoticComponent<InputChipsProps & React.RefAttributes<HTMLInputElement>>, import("styled-components").DefaultTheme, {}, never>;
