{"version":3,"sources":["../../../src/Form/Fieldset/Fieldset.tsx"],"names":["omit","pick","React","createContext","forwardRef","styled","omitStyledProps","ArrowDropDown","ArrowRight","Space","SpaceVertical","simpleLayoutCSS","Legend","Accordion","AccordionContent","AccordionControlPropKeys","AccordionDisclosure","accordionIndicatorDefaults","indicatorGap","indicatorIcons","close","open","indicatorPosition","indicatorSize","FieldsetContext","FieldsetLayout","props","ref","accordion","className","inline","gap","legend","fieldsHideLabel","children","wrap","restProps","accordionProps","LayoutComponent","content","undefined","console","warn","renderedFieldset","displayName","Fieldset","attrs","width","theme","borderWidth","defaultIndicatorSize","space","medium","defaultIndicatorGap","xsmall","fontSizes","small","fontWeights","semiBold","xxsmall"],"mappings":"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","sourcesContent":["/*\n\n MIT License\n\n Copyright (c) 2021 Looker Data Sciences, Inc.\n\n Permission is hereby granted, free of charge, to any person obtaining a copy\n of this software and associated documentation files (the \"Software\"), to deal\n in the Software without restriction, including without limitation the rights\n to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n copies of the Software, and to permit persons to whom the Software is\n furnished to do so, subject to the following conditions:\n\n The above copyright notice and this permission notice shall be included in all\n copies or substantial portions of the Software.\n\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n SOFTWARE.\n\n */\n\nimport omit from 'lodash/omit'\nimport pick from 'lodash/pick'\nimport React, { createContext, forwardRef, ReactNode, Ref } from 'react'\nimport styled from 'styled-components'\nimport {\n  CompatibleHTMLProps,\n  SpacingSizes,\n  omitStyledProps,\n} from '@looker/design-tokens'\nimport { ArrowDropDown } from '@styled-icons/material/ArrowDropDown'\nimport { ArrowRight } from '@styled-icons/material/ArrowRight'\nimport { Space, SpaceVertical } from '../../Layout'\nimport { SimpleLayoutProps, simpleLayoutCSS } from '../../Layout/utils/simple'\nimport { Legend } from '../Legend'\nimport {\n  Accordion,\n  AccordionContent,\n  AccordionControlProps,\n  AccordionControlPropKeys,\n  AccordionDisclosure,\n  AccordionIndicatorProps,\n} from '../../Accordion'\n\nexport interface FieldsetProps\n  extends Omit<CompatibleHTMLProps<HTMLDivElement>, 'wrap'>,\n    SimpleLayoutProps,\n    AccordionControlProps {\n  /**\n   * If true, the Fieldset will be wrapped by an Accordion structure (i.e. a collapsible section)\n   * @default false\n   */\n  accordion?: boolean\n  ariaLabeledby?: string\n  /**\n   * Determines where to place the label in relation to the input.\n   * @default false\n   */\n  inline?: boolean\n\n  /**\n   * Allowed fields to wrap if they exceed the container width\n   * @default false\n   */\n  wrap?: boolean\n\n  /**\n   * Displayed above the children of Fieldset\n   * I18n recommended: content that is user visible should be treated for i18n\n   */\n  legend?: ReactNode\n  /*\n   * Hide labels on Fields within this Fieldset\n   * @default false\n   */\n  fieldsHideLabel?: boolean\n  /**\n   * Amount of space between fields\n   * @default medium\n   */\n  gap?: SpacingSizes\n}\n\nconst accordionIndicatorDefaults: AccordionIndicatorProps = {\n  indicatorGap: 'xsmall',\n  indicatorIcons: {\n    close: <ArrowRight />,\n    open: <ArrowDropDown />,\n  },\n  indicatorPosition: 'left',\n  indicatorSize: 'medium',\n}\n\nexport interface FieldsetContextProps {\n  fieldsHideLabel?: boolean\n}\n\nexport const FieldsetContext = createContext<FieldsetContextProps>({})\n\nconst FieldsetLayout = forwardRef(\n  (props: FieldsetProps, ref: Ref<HTMLDivElement>) => {\n    const {\n      accordion,\n      className,\n      inline,\n      gap = 'medium',\n      legend,\n      fieldsHideLabel,\n      children,\n      wrap,\n      ...restProps\n    } = omit(props, [...AccordionControlPropKeys])\n\n    const accordionProps = {\n      ...pick(props, [...AccordionControlPropKeys]),\n      ...accordionIndicatorDefaults,\n    }\n\n    const LayoutComponent = inline ? Space : SpaceVertical\n\n    /**\n     * Ideally this would be implemented by using `as=\"fieldset\"` property on LayoutComponent directly\n     * but a long-standing bug in Chrome prevents styling a fieldset with flex (or grid)\n     * Chromium bug: https://bugs.chromium.org/p/chromium/issues/detail?id=375693\n     *\n     * Implemented using WAI-ARIA to create relationship between controls and legend or label:\n     * https://www.w3.org/WAI/tutorials/forms/grouping/#associating-related-controls-with-wai-aria\n     */\n\n    const content = (\n      <LayoutComponent\n        gap={gap}\n        ref={ref}\n        role=\"group\"\n        align=\"start\"\n        flexWrap={wrap ? 'wrap' : undefined}\n      >\n        {children}\n      </LayoutComponent>\n    )\n\n    !legend &&\n      accordion &&\n      // eslint-disable-next-line no-console\n      console.warn(\n        'Please provide a value for the \"legend\" prop if using accordion mode'\n      )\n\n    const renderedFieldset = legend ? (\n      accordion ? (\n        <Accordion {...accordionProps}>\n          <AccordionDisclosure>{legend}</AccordionDisclosure>\n          <AccordionContent>{content}</AccordionContent>\n        </Accordion>\n      ) : (\n        <SpaceVertical>\n          {typeof legend === 'string' ? <Legend>{legend}</Legend> : legend}\n          {content}\n        </SpaceVertical>\n      )\n    ) : (\n      content\n    )\n\n    return (\n      <FieldsetContext.Provider\n        value={{ fieldsHideLabel: fieldsHideLabel || false }}\n      >\n        <div {...omitStyledProps(restProps)} className={className}>\n          {renderedFieldset}\n        </div>\n      </FieldsetContext.Provider>\n    )\n  }\n)\n\nFieldsetLayout.displayName = 'FieldsetLayout'\n\nexport const Fieldset = styled(FieldsetLayout).attrs(({ width = '100%' }) => ({\n  width,\n}))`\n  ${simpleLayoutCSS}\n\n  ${AccordionContent} {\n    padding-left: ${({ theme }) => {\n      const borderWidth = '1px'\n      const defaultIndicatorSize = theme.space.medium\n      const defaultIndicatorGap = theme.space.xsmall\n\n      return `calc(${borderWidth} + ${defaultIndicatorSize} + ${defaultIndicatorGap})`\n    }};\n    padding-top: ${({ theme }) => theme.space.medium};\n  }\n\n  ${AccordionDisclosure} {\n    font-size: ${({ theme }) => theme.fontSizes.small};\n    font-weight: ${({ theme }) => theme.fontWeights.semiBold};\n    height: 24px;\n    padding: ${({ theme: { space } }) => space.xxsmall} 0;\n  }\n`\n"],"file":"Fieldset.js"}