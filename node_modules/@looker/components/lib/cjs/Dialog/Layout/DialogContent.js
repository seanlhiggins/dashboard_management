"use strict";

require("core-js/modules/es.symbol.description.js");

require("core-js/modules/es.array.iterator.js");

require("core-js/modules/es.array.slice.js");

require("core-js/modules/es.array.from.js");

require("core-js/modules/es.weak-map.js");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.DialogContent = void 0;

require("core-js/modules/es.array.index-of.js");

var _designTokens = require("@looker/design-tokens");

var _react = _interopRequireWildcard(require("react"));

var _styledComponents = _interopRequireWildcard(require("styled-components"));

var _utils = require("../../utils");

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function _getRequireWildcardCache() { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }

function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }

function _iterableToArrayLimit(arr, i) { if (typeof Symbol === "undefined" || !(Symbol.iterator in Object(arr))) return; var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }

function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }

function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

const DialogContent = (_ref) => {
  let children = _ref.children,
      className = _ref.className,
      hasFooter = _ref.hasFooter,
      hasHeader = _ref.hasHeader,
      props = _objectWithoutProperties(_ref, ["children", "className", "hasFooter", "hasHeader"]);

  const internalRef = (0, _react.useRef)(null);

  const _useState = (0, _react.useState)(false),
        _useState2 = _slicedToArray(_useState, 2),
        hasOverflow = _useState2[0],
        setHasOverflow = _useState2[1];

  const _useState3 = (0, _react.useState)(0),
        _useState4 = _slicedToArray(_useState3, 2),
        height = _useState4[0],
        setHeight = _useState4[1];

  const handleResize = () => {
    if (internalRef.current) {
      setHeight(internalRef.current.offsetHeight);
    }
  };

  (0, _utils.useResize)(internalRef.current, handleResize);
  (0, _react.useEffect)(() => {
    const container = internalRef.current;

    if (container) {
      setHasOverflow(container.offsetHeight < container.scrollHeight);
    }
  }, [height]);
  return _react.default.createElement(InnerDialogContent, _extends({
    hasOverflow: hasOverflow,
    ref: internalRef,
    px: ['medium', 'xlarge'],
    pb: hasOverflow || !!hasFooter ? 'large' : 'xxxsmall',
    pt: hasOverflow || !!hasHeader ? 'large' : 'xxxsmall'
  }, (0, _designTokens.pickStyledProps)(props), {
    "data-testid": "dialog-content"
  }), children);
};

exports.DialogContent = DialogContent;

const InnerDialogContent = _styledComponents.default.div.withConfig({
  displayName: "DialogContent__InnerDialogContent",
  componentId: "rfzesr-0"
})(["", " ", " ", " flex:1 1 auto;overflow:auto;", ""], _designTokens.reset, _designTokens.layout, _designTokens.padding, ({
  hasOverflow,
  theme
}) => hasOverflow && (0, _styledComponents.css)(["border-bottom:1px solid ", ";border-top:1px solid ", ";box-shadow:inset 0 -4px 4px -4px ", ";"], theme.colors.ui2, theme.colors.ui2, theme.colors.ui2));
//# sourceMappingURL=DialogContent.js.map