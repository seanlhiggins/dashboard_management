"use strict";

require("core-js/modules/es.weak-map.js");

require("core-js/modules/es.array.iterator.js");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.TreeStyle = exports.TreeItemInnerDetail = exports.TreeItemInner = void 0;

var _styledComponents = _interopRequireWildcard(require("styled-components"));

var _Accordion = require("../Accordion");

var _utils = require("../List/utils");

var _List = require("../List");

var _ListItemLabel = require("../List/ListItemLabel");

var _TreeItem = require("./TreeItem");

var _TreeBranch = require("./TreeBranch");

var _utils2 = require("./utils");

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function _getRequireWildcardCache() { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

const TreeItemInner = (0, _styledComponents.default)(_TreeItem.TreeItem).withConfig({
  displayName: "TreeStyle__TreeItemInner",
  componentId: "sc-1olkz1p-0"
})(["> button,> a{background-color:transparent;padding-left:0;}"]);
exports.TreeItemInner = TreeItemInner;

const TreeItemInnerDetail = _styledComponents.default.div.withConfig({
  displayName: "TreeStyle__TreeItemInnerDetail",
  componentId: "sc-1olkz1p-1"
})([""]);

exports.TreeItemInnerDetail = TreeItemInnerDetail;
const dividersCSS = (0, _styledComponents.css)(["", "{margin-top:1px;}", "{margin-top:1px;", "{margin-top:0;}}"], _TreeItem.TreeItem, _Accordion.AccordionDisclosureStyle, TreeItemInner);

const TreeStyle = _styledComponents.default.div.withConfig({
  displayName: "TreeStyle",
  componentId: "sc-1olkz1p-2"
})(["color:", ";flex-shrink:2;min-width:0;> ", "{> ", "{", "}> ", "{", "{font-weight:", ";}", " background-clip:padding-box;padding-right:0;", "}}", " > ", " > ", " > ", "{> ", "{> ", ",> ", ",> ", "{", "}}> ", "{", "}}> ", "{> ", "{> ", ",> ", ",> ", "{", "}}> ", "{", "}}"], ({
  theme
}) => theme.colors.text5, _Accordion.Accordion, _Accordion.AccordionContent, ({
  border,
  depth,
  indicatorSize,
  theme
}) => border && (0, _utils2.generateTreeBorder)(depth, indicatorSize, theme), _Accordion.AccordionDisclosureStyle, _List.ListItem, ({
  branchFontWeight,
  theme: {
    fontWeights
  }
}) => branchFontWeight ? fontWeights.normal : fontWeights.semiBold, _utils.listItemBackgroundColor, ({
  depth,
  indicatorSize,
  theme
}) => (0, _utils2.generateIndent)(depth, indicatorSize, theme), ({
  dividers
}) => dividers && dividersCSS, _Accordion.Accordion, _Accordion.AccordionContent, _List.List, _List.ListItem, _ListItemLabel.ListItemLabelButton, _ListItemLabel.ListItemLabelLink, _ListItemLabel.ListItemLabelDiv, ({
  depth,
  indicatorSize,
  theme
}) => (0, _utils2.generateIndent)(depth + 2, indicatorSize, theme), _TreeBranch.TreeBranch, ({
  depth,
  indicatorSize,
  theme
}) => (0, _utils2.generateIndent)(depth + 2, indicatorSize, theme), _List.List, _List.ListItem, _ListItemLabel.ListItemLabelButton, _ListItemLabel.ListItemLabelLink, _ListItemLabel.ListItemLabelDiv, ({
  depth,
  indicatorSize,
  theme
}) => (0, _utils2.generateIndent)(depth + 2, indicatorSize, theme), _TreeBranch.TreeBranch, ({
  depth,
  indicatorSize,
  theme
}) => (0, _utils2.generateIndent)(depth + 2, indicatorSize, theme));

exports.TreeStyle = TreeStyle;
//# sourceMappingURL=TreeStyle.js.map