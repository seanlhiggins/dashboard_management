"use strict";

require("core-js/modules/es.weak-map.js");

require("core-js/modules/es.array.iterator.js");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.TabList = void 0;

require("core-js/modules/es.array.map.js");

var _reactI18next = require("react-i18next");

var _react = _interopRequireWildcard(require("react"));

var _designTokens = require("@looker/design-tokens");

var _styledComponents = _interopRequireWildcard(require("styled-components"));

var _utils = require("../utils");

var _ = require(".");

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function _getRequireWildcardCache() { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

const TabListLayout = (0, _react.forwardRef)(({
  children,
  selectedIndex,
  onSelectTab,
  className
}, ref) => {
  const _useTranslation = (0, _reactI18next.useTranslation)('TabList'),
        t = _useTranslation.t;

  const clonedChildren = _react.Children.map(children, (child, index) => {
    return (0, _react.cloneElement)(child, {
      index,
      onSelect: () => onSelectTab && onSelectTab(index),
      selected: index === selectedIndex,
      selectedIndex
    });
  });

  const navProps = (0, _utils.useArrowKeyNav)({
    axis: 'horizontal',
    ref
  });
  return _react.default.createElement("div", _extends({
    "aria-label": t('Tabs'),
    className: className,
    role: "tablist"
  }, navProps), clonedChildren);
});
TabListLayout.displayName = 'TabListLayout';
const defaultLayoutCSS = (0, _styledComponents.css)(["", "{min-width:3rem;}", " + ", "{margin-left:", ";}"], _.Tab, _.Tab, _.Tab, props => props.theme.space.xlarge);
const distributeCSS = (0, _styledComponents.css)(["display:grid;grid-auto-columns:1fr;grid-auto-flow:column;", "{padding:", ";}"], _.Tab, ({
  theme: {
    space
  }
}) => `${space.xsmall} ${space.medium}`);
const TabList = (0, _styledComponents.default)(TabListLayout).attrs(({
  fontSize = 'small'
}) => ({
  fontSize
})).withConfig({
  displayName: "TabList",
  componentId: "sc-1xnjj79-0"
})(["", " ", " ", " border-bottom:1px solid ", ";-ms-overflow-style:none;overflow-x:auto;scrollbar-width:none;white-space:nowrap;&::-webkit-scrollbar{display:none;}", ""], _designTokens.reset, _designTokens.padding, _designTokens.fontSize, props => props.theme.colors.ui2, ({
  distribute
}) => distribute ? distributeCSS : defaultLayoutCSS);
exports.TabList = TabList;
//# sourceMappingURL=TabList.js.map