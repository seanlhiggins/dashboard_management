"use strict";

require("core-js/modules/es.symbol.description.js");

require("core-js/modules/es.array.iterator.js");

require("core-js/modules/es.array.slice.js");

require("core-js/modules/es.array.from.js");

require("core-js/modules/es.weak-map.js");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.ButtonItem = void 0;

require("core-js/modules/es.array.includes.js");

require("core-js/modules/es.string.includes.js");

require("core-js/modules/es.array.index-of.js");

var _react = _interopRequireWildcard(require("react"));

var _styledComponents = _interopRequireDefault(require("styled-components"));

var _designTokens = require("@looker/design-tokens");

var _height = require("../Form/Inputs/height");

var _ButtonSetContext = require("./ButtonSetContext");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function _getRequireWildcardCache() { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }

function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }

function _iterableToArrayLimit(arr, i) { if (typeof Symbol === "undefined" || !(Symbol.iterator in Object(arr))) return; var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }

function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }

function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

const ButtonLayout = (0, _react.forwardRef)((_ref, ref) => {
  let children = _ref.children,
      onClick = _ref.onClick,
      value = _ref.value,
      onBlur = _ref.onBlur,
      onKeyUp = _ref.onKeyUp,
      props = _objectWithoutProperties(_ref, ["children", "onClick", "value", "onBlur", "onKeyUp"]);

  const _useContext = (0, _react.useContext)(_ButtonSetContext.ButtonSetContext),
        disabled = _useContext.disabled,
        contextValue = _useContext.value,
        onItemClick = _useContext.onItemClick;

  const _useState = (0, _react.useState)(false),
        _useState2 = _slicedToArray(_useState, 2),
        isFocusVisible = _useState2[0],
        setFocusVisible = _useState2[1];

  const handleOnKeyUp = event => {
    setFocusVisible(true);
    onKeyUp && onKeyUp(event);
  };

  const handleOnBlur = event => {
    setFocusVisible(false);
    onBlur && onBlur(event);
  };

  function handleClick(e) {
    onClick && onClick(e);

    if (!e.defaultPrevented) {
      onItemClick && onItemClick(e);
    }
  }

  const itemValue = value !== undefined ? value : typeof children === 'string' ? children : '';
  const selected = contextValue ? typeof contextValue === 'string' ? contextValue === itemValue : contextValue.includes(itemValue) : false;
  return _react.default.createElement(ButtonOuter, _extends({
    "aria-pressed": selected,
    ref: ref,
    onClick: handleClick,
    value: itemValue,
    disabled: disabled,
    focusVisible: isFocusVisible,
    onKeyUp: handleOnKeyUp,
    onBlur: handleOnBlur
  }, (0, _designTokens.omitStyledProps)(props)), children);
});
ButtonLayout.displayName = 'ButtonLayout';

const ButtonOuter = _styledComponents.default.button.attrs(({
  type = 'button'
}) => ({
  type
})).withConfig({
  displayName: "ButtonItem__ButtonOuter",
  componentId: "sc-22szay-0"
})(["", ""], props => props.focusVisible && `box-shadow: 0 0 0.5px 1px ${props.theme.colors.keyFocus}`);

const ButtonItem = (0, _styledComponents.default)(ButtonLayout).withConfig({
  displayName: "ButtonItem",
  componentId: "sc-22szay-1"
})(["align-items:center;background:transparent;border:none;color:", ";cursor:pointer;display:inline-flex;font-family:", ";font-size:", ";height:", ";justify-content:center;margin:0;padding:0 ", ";transition:background ", "ms ease;user-select:none;", " &:active,&:focus,&:hover{background:", ";color:", ";}&:focus{outline:none;}&[disabled]{color:", ";&:hover{background:inherit;}cursor:default;}&[aria-pressed='true']{background:", ";color:", ";&[disabled]{background:", ";color:", ";}}"], ({
  theme
}) => theme.colors.text3, ({
  theme
}) => theme.fonts.body, ({
  theme
}) => theme.fontSizes.small, _height.inputHeight, ({
  theme
}) => theme.space.small, ({
  theme
}) => theme.transitions.quick, _designTokens.space, ({
  theme
}) => theme.colors.neutralSubtle, ({
  theme
}) => theme.colors.text5, props => props.theme.colors.text1, ({
  theme
}) => theme.colors.keySubtle, ({
  theme
}) => theme.colors.key, ({
  theme
}) => theme.colors.keySubtle, ({
  theme
}) => theme.colors.keyFocus);
exports.ButtonItem = ButtonItem;
//# sourceMappingURL=ButtonItem.js.map