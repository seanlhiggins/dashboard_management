"use strict";

require("core-js/modules/es.symbol.description.js");

require("core-js/modules/es.array.iterator.js");

require("core-js/modules/es.array.slice.js");

require("core-js/modules/es.array.from.js");

require("core-js/modules/es.weak-map.js");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.ButtonBase = exports.GenericButtonBase = exports.buttonIconSize = exports.buttonCSS = void 0;

require("core-js/modules/es.array.index-of.js");

var _designTokens = require("@looker/design-tokens");

var _styledIcon = require("@styled-icons/styled-icon");

var _react = _interopRequireWildcard(require("react"));

var _styledComponents = _interopRequireWildcard(require("styled-components"));

var _styledSystem = require("styled-system");

var _size = require("./size");

var _icon = require("./icon");

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function _getRequireWildcardCache() { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }

function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }

function _iterableToArrayLimit(arr, i) { if (typeof Symbol === "undefined" || !(Symbol.iterator in Object(arr))) return; var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }

function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }

function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

const buttonCSS = (color, focusVisible) => (0, _styledComponents.css)(["", " ", " ", " ", " ", " align-items:center;border-radius:", ";cursor:pointer;display:inline-flex;font-family:", ";font-weight:", ";justify-content:center;line-height:1;outline:none;transition:border 80ms;vertical-align:middle;white-space:nowrap;&[disabled]{cursor:default;filter:grayscale(0.3);opacity:0.25;}", " ", ""], _designTokens.reset, _styledSystem.maxWidth, _styledSystem.minWidth, _styledSystem.width, focusVisible && (0, _designTokens.buttonShadow)(color), ({
  theme
}) => theme.radii.medium, ({
  theme
}) => theme.fonts.brand, ({
  theme
}) => theme.fontWeights.medium, _size.buttonSize, _designTokens.space);

exports.buttonCSS = buttonCSS;
const buttonIconSize = (0, _styledComponents.css)(["", "{height:", ";width:", ";}"], _styledIcon.StyledIconBase, ({
  theme,
  size = 'medium'
}) => theme.sizes[_size.buttonIconSizeMap[size]], ({
  theme,
  size = 'medium'
}) => theme.sizes[_size.buttonIconSizeMap[size]]);
exports.buttonIconSize = buttonIconSize;

const ButtonOuter = _styledComponents.default.button.withConfig({
  shouldForwardProp: _designTokens.shouldForwardProp
}).attrs(({
  color = 'key'
}) => ({
  color
})).withConfig({
  displayName: "ButtonBase__ButtonOuter",
  componentId: "sc-1bpio6j-0"
})(["", " ", ""], ({
  color,
  focusVisible
}) => buttonCSS(color, focusVisible), ({
  fullWidth
}) => fullWidth && `width: 100%;`);

const ButtonJSX = (0, _react.forwardRef)((props, ref) => {
  const children = props.children,
        iconBefore = props.iconBefore,
        iconAfter = props.iconAfter,
        onBlur = props.onBlur,
        onKeyUp = props.onKeyUp,
        _props$size = props.size,
        size = _props$size === void 0 ? 'medium' : _props$size,
        restProps = _objectWithoutProperties(props, ["children", "iconBefore", "iconAfter", "onBlur", "onKeyUp", "size"]);

  const _useState = (0, _react.useState)(false),
        _useState2 = _slicedToArray(_useState, 2),
        isFocusVisible = _useState2[0],
        setFocusVisible = _useState2[1];

  const handleOnKeyUp = event => {
    setFocusVisible(true);
    onKeyUp && onKeyUp(event);
  };

  const handleOnBlur = event => {
    setFocusVisible(false);
    onBlur && onBlur(event);
  };

  return _react.default.createElement(ButtonOuter, _extends({}, restProps, {
    size: size,
    focusVisible: isFocusVisible,
    onKeyUp: handleOnKeyUp,
    onBlur: handleOnBlur,
    ref: ref,
    px: (0, _size.buttonPadding)(!!(iconBefore || iconAfter), size)
  }), iconBefore, children, iconAfter);
});
ButtonJSX.displayName = 'ButtonJSX';
const GenericButtonBase = (0, _styledComponents.default)(ButtonJSX).withConfig({
  displayName: "ButtonBase__GenericButtonBase",
  componentId: "sc-1bpio6j-1"
})([""]);
exports.GenericButtonBase = GenericButtonBase;
const ButtonBase = (0, _styledComponents.default)(GenericButtonBase).withConfig({
  displayName: "ButtonBase",
  componentId: "sc-1bpio6j-2"
})(["", " ", ""], _icon.buttonIcon, buttonIconSize);
exports.ButtonBase = ButtonBase;
//# sourceMappingURL=ButtonBase.js.map