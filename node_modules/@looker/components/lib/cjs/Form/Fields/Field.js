"use strict";

require("core-js/modules/es.weak-map.js");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Field = exports.omitFieldProps = exports.pickFieldProps = exports.fieldPropKeys = void 0;

require("core-js/modules/es.array.iterator.js");

require("core-js/modules/es.symbol.description.js");

var _designTokens = require("@looker/design-tokens");

var _react = _interopRequireWildcard(require("react"));

var _styledComponents = _interopRequireWildcard(require("styled-components"));

var _omit = _interopRequireDefault(require("lodash/omit"));

var _pick = _interopRequireDefault(require("lodash/pick"));

var _Text = require("../../Text");

var _Fieldset = require("../Fieldset");

var _height = require("../Inputs/height");

var _Label = require("../Label");

var _VisuallyHidden = require("../../VisuallyHidden");

var _ValidationMessage = require("../ValidationMessage");

var _RequiredStar = require("./RequiredStar");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function _getRequireWildcardCache() { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

const fieldPropKeys = ['description', 'detail', 'id', 'inline', 'label', 'hideLabel', 'labelWidth', 'validationMessage', 'width'];
exports.fieldPropKeys = fieldPropKeys;

const pickFieldProps = props => (0, _pick.default)(props, [...fieldPropKeys, 'disabled', 'required', 'className', 'autoResize']);

exports.pickFieldProps = pickFieldProps;

const omitFieldProps = props => (0, _omit.default)(props, fieldPropKeys);

exports.omitFieldProps = omitFieldProps;

const FieldLayout = ({
  className,
  children,
  description,
  detail,
  id,
  ariaLabelOnly,
  label,
  hideLabel,
  required,
  validationMessage
}) => {
  const _useContext = (0, _react.useContext)(_Fieldset.FieldsetContext),
        fieldsHideLabel = _useContext.fieldsHideLabel;

  const fieldDescription = description && _react.default.createElement(_Text.Paragraph, {
    mt: "xsmall",
    fontSize: "xsmall",
    color: "text2"
  }, description);

  const fieldValidation = validationMessage && _react.default.createElement(_ValidationMessage.ValidationMessage, validationMessage);

  const labelComponent = _react.default.createElement(_Label.Label, {
    htmlFor: ariaLabelOnly ? undefined : id,
    id: `labelledby-${id}`
  }, label, required && _react.default.createElement(_RequiredStar.RequiredStar, null));

  return _react.default.createElement("div", {
    className: className
  }, (fieldsHideLabel || hideLabel) && hideLabel !== false ? _react.default.createElement(_VisuallyHidden.VisuallyHidden, null, labelComponent) : labelComponent, detail && _react.default.createElement(FieldDetail, null, detail), _react.default.createElement(InputArea, null, children), _react.default.createElement(MessageArea, {
    id: `describedby-${id}`
  }, fieldDescription, fieldValidation));
};

const FieldDetail = (0, _styledComponents.default)(_Text.Text).attrs(() => ({
  color: 'inherit',
  fontSize: 'xsmall',
  lineHeight: 'xsmall'
})).withConfig({
  displayName: "Field__FieldDetail",
  componentId: "m8c1e2-0"
})([""]);

const InputArea = _styledComponents.default.div.withConfig({
  displayName: "Field__InputArea",
  componentId: "m8c1e2-1"
})(["min-width:0;"]);

const MessageArea = _styledComponents.default.div.withConfig({
  displayName: "Field__MessageArea",
  componentId: "m8c1e2-2"
})([""]);

const fieldLabelCSS = inline => inline ? (0, _styledComponents.css)(["height:", ";justify-self:end;line-height:", ";padding-right:", ";text-align:right;"], _height.inputHeight, _height.inputHeight, ({
  theme
}) => theme.space.small) : (0, _styledComponents.css)(["line-height:", ";padding-bottom:", ";"], ({
  theme
}) => theme.lineHeights.xsmall, ({
  theme
}) => theme.space.xxsmall);

const Field = (0, _styledComponents.default)(FieldLayout).withConfig({
  displayName: "Field",
  componentId: "m8c1e2-3"
})(["align-items:left;display:", ";grid-template-areas:", ";grid-template-columns:", ";height:fit-content;justify-content:space-between;width:", ";", " ", "{align-items:center;", " grid-area:input;}", "{grid-area:messages;}& > ", "{grid-area:label;", "}", "{grid-area:detail;justify-self:end;padding-left:", ";", "}", "{margin-top:", ";}"], ({
  autoResize
}) => autoResize ? 'inline-grid' : 'grid', ({
  inline
}) => inline ? '"label input detail" ". messages messages"' : '"label detail" "input input" "messages messages"', ({
  inline
}) => inline ? '150px 1fr' : undefined, ({
  autoResize
}) => autoResize ? 'fit-content' : '100%', _designTokens.width, InputArea, ({
  autoResize
}) => autoResize && (0, _styledComponents.css)(["align-items:stretch;display:flex;flex-direction:column;"]), MessageArea, _Label.Label, ({
  inline
}) => fieldLabelCSS(inline), FieldDetail, ({
  theme: {
    space
  }
}) => space.small, ({
  inline
}) => inline && (0, _styledComponents.css)(["align-self:center;"]), _ValidationMessage.ValidationMessage, ({
  theme
}) => theme.space.xsmall);
exports.Field = Field;
//# sourceMappingURL=Field.js.map