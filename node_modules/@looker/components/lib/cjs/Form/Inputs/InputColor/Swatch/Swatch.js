"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Swatch = void 0;

var _styledComponents = _interopRequireDefault(require("styled-components"));

var _designTokens = require("@looker/design-tokens");

var _styledSystem = require("styled-system");

var _InputText = require("../../../Inputs/InputText");

var _height = require("../../height");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

const emptySwatch = `position: relative;
  &:after {
    position: absolute;
    display: block;
    content: '';
    height: 1px;
    width: calc(100% + 12px);
    background: red;
    top: 50%;
    margin-left: -6px;
    transform: rotate(-45deg);
  }`;

const Swatch = _styledComponents.default.div.withConfig({
  shouldForwardProp: _designTokens.shouldForwardProp
}).attrs(({
  color = 'transparent',
  height = _height.inputHeight,
  width = _height.inputHeight
}) => ({
  color,
  'data-testid': 'swatch',
  height,
  width
})).withConfig({
  displayName: "Swatch",
  componentId: "sc-1ldlx27-0"
})(["", " ", " ", " ", " background-color:", ";flex-shrink:0;margin-top:auto;&:disabled{", "}&:hover:not([disabled]){", "}", ""], _designTokens.reset, _InputText.inputCSS, _styledSystem.width, _styledSystem.height, ({
  color,
  disabled
}) => disabled ? (0, _designTokens.disabledSwatchColor)(color) : color, _InputText.inputTextDisabled, _InputText.inputTextHover, props => props.color === 'transparent' && emptySwatch);

exports.Swatch = Swatch;
//# sourceMappingURL=Swatch.js.map