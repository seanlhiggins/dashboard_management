"use strict";

require("core-js/modules/es.symbol.description.js");

require("core-js/modules/es.array.iterator.js");

require("core-js/modules/es.array.slice.js");

require("core-js/modules/es.array.from.js");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.isValidTime = exports.parseBase10Int = exports.formatTimeString = void 0;

require("core-js/modules/es.string.split.js");

var _padStart = _interopRequireDefault(require("lodash/padStart"));

var _toString = _interopRequireDefault(require("lodash/toString"));

var _map3 = _interopRequireDefault(require("lodash/map"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }

function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }

function _iterableToArrayLimit(arr, i) { if (typeof Symbol === "undefined" || !(Symbol.iterator in Object(arr))) return; var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }

function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }

const formatTimeString = number => {
  return (0, _padStart.default)((0, _toString.default)(number), 2, '0');
};

exports.formatTimeString = formatTimeString;

const parseBase10Int = value => value.length ? parseInt(value, 10) : 0;

exports.parseBase10Int = parseBase10Int;

const isValidTime = value => {
  if (!value) {
    return true;
  }

  const _map = (0, _map3.default)(value.split(':'), parseBase10Int),
        _map2 = _slicedToArray(_map, 2),
        _map2$ = _map2[0],
        hour = _map2$ === void 0 ? 0 : _map2$,
        _map2$2 = _map2[1],
        minute = _map2$2 === void 0 ? 0 : _map2$2;

  if (hour < 24 && minute <= 60) {
    return true;
  }

  return false;
};

exports.isValidTime = isValidTime;
//# sourceMappingURL=utils.js.map