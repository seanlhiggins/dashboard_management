"use strict";

require("core-js/modules/es.weak-map.js");

require("core-js/modules/es.array.iterator.js");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Space = exports.spaceCSS = exports.defaultGap = void 0;

var _styledComponents = _interopRequireWildcard(require("styled-components"));

var _styledSystem = require("styled-system");

var _designTokens = require("@looker/design-tokens");

var _simple = require("../utils/simple");

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function _getRequireWildcardCache() { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

const defaultGap = 'medium';
exports.defaultGap = defaultGap;
const spaceCSS = (0, _styledComponents.css)(["", " ", " display:flex;"], _simple.simpleLayoutCSS, _designTokens.flexbox);
exports.spaceCSS = spaceCSS;

const fauxGap = ({
  gap = defaultGap,
  reverse
}) => (0, _styledComponents.css)(["&& > *{margin-right:", ";}", ""], ({
  theme: {
    space
  }
}) => space[gap], ({
  theme: {
    space
  }
}) => reverse ? `&& > *:first-child { margin-right: ${space.none}; }` : `&& > *:last-child { margin-right: ${space.none}; }`);

const flexGap = ({
  gap = defaultGap,
  reverse
}) => (0, _styledComponents.css)(["@supports (-moz-appearance:none){gap:0 ", ";}@supports not (-moz-appearance:none){", "}@media screen and (-ms-high-contrast:active),(-ms-high-contrast:none){", "}"], ({
  theme: {
    space
  }
}) => space[gap], fauxGap({
  gap,
  reverse
}), fauxGap({
  gap,
  reverse
}));

const verticalAlign = (0, _styledSystem.variant)({
  prop: 'align',
  variants: {
    center: {
      alignItems: 'center'
    },
    end: {
      alignItems: 'flex-end'
    },
    start: {
      alignItems: 'flex-start'
    }
  }
});
const justify = (0, _styledSystem.variant)({
  prop: 'justify',
  variants: {
    center: {
      justifyContent: 'center'
    },
    end: {
      justifyContent: 'flex-end'
    },
    start: {
      justifyContent: 'flex-start'
    }
  }
});

const Space = _styledComponents.default.div.withConfig({
  shouldForwardProp: _designTokens.shouldForwardProp
}).attrs(({
  alignItems = 'center',
  width = '100%'
}) => ({
  alignItems,
  width
})).withConfig({
  displayName: "Space",
  componentId: "zsz5hl-0"
})(["", " ", " ", " flex-direction:", ";", " ", " ", " ", ""], spaceCSS, ({
  stretch
}) => !stretch && verticalAlign, ({
  stretch
}) => !stretch && justify, ({
  reverse
}) => reverse ? 'row-reverse' : 'row', ({
  around
}) => around && 'justify-content: space-around;', ({
  between
}) => between && 'justify-content: space-between;', ({
  evenly
}) => evenly && 'justify-content: space-evenly;', ({
  around,
  between,
  evenly
}) => !around && !between && !evenly && flexGap);

exports.Space = Space;
//# sourceMappingURL=Space.js.map