"use strict";

require("core-js/modules/es.weak-map.js");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.ListItemWrapper = void 0;

require("core-js/modules/es.array.iterator.js");

require("core-js/modules/es.symbol.description.js");

var _designTokens = require("@looker/design-tokens");

var _styledIcon = require("@styled-icons/styled-icon");

var _omit = _interopRequireDefault(require("lodash/omit"));

var _react = _interopRequireWildcard(require("react"));

var _styledComponents = _interopRequireDefault(require("styled-components"));

var _types = require("./types");

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function _getRequireWildcardCache() { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

const ListItemWrapperInternal = (0, _react.forwardRef)((props, ref) => {
  return _react.default.createElement("li", _extends({}, (0, _omit.default)(props, 'current', 'focusVisible', 'hovered', 'keyColor', 'selected', [..._types.listItemDimensionKeys]), {
    ref: ref,
    role: "none"
  }));
});
ListItemWrapperInternal.displayName = 'ListItemWrapperInternal';
const ListItemWrapper = (0, _styledComponents.default)(ListItemWrapperInternal).withConfig({
  shouldForwardProp: _designTokens.shouldForwardProp
}).withConfig({
  displayName: "ListItemWrapper",
  componentId: "rbfk96-0"
})(["align-items:center;color:", ";display:flex;font-size:", ";font-weight:", ";list-style-type:none;min-height:", "px;outline:none;text-decoration:none;", " ", ",svg{align-self:", ";transition:color ", ";}&[aria-current='true']{background:", ";font-weight:", ";}&[aria-expanded='true']{background:", ";}&[disabled]{color:", ";& > *{cursor:not-allowed;}&:hover{color:", ";}}"], ({
  theme: {
    colors
  }
}) => colors.text5, ({
  theme: {
    fontSizes
  }
}) => fontSizes.small, ({
  theme: {
    fontWeights
  }
}) => fontWeights.normal, ({
  height
}) => height, ({
  focusVisible,
  theme
}) => focusVisible && `
      &:focus-within > * {
        box-shadow: inset 0 0 0 2px ${theme.colors.keyFocus};
      }
    `, _styledIcon.StyledIconBase, ({
  description
}) => description ? 'flex-start' : 'center', ({
  theme
}) => `${theme.transitions.quick}ms ${theme.easings.ease}`, ({
  theme: {
    colors
  }
}) => colors.ui2, ({
  theme: {
    fontWeights
  }
}) => fontWeights.semiBold, ({
  theme: {
    colors
  }
}) => colors.ui1, ({
  theme: {
    colors
  }
}) => colors.text1, ({
  theme: {
    colors
  }
}) => colors.text1);
exports.ListItemWrapper = ListItemWrapper;
//# sourceMappingURL=ListItemWrapper.js.map