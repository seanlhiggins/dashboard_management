"use strict";

require("core-js/modules/es.array.index-of.js");

require("core-js/modules/es.weak-map.js");

require("core-js/modules/es.array.iterator.js");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.List = exports.ListInternal = void 0;

require("core-js/modules/es.symbol.description.js");

var _react = _interopRequireWildcard(require("react"));

var _styledComponents = _interopRequireDefault(require("styled-components"));

var _designTokens = require("@looker/design-tokens");

var _utils = require("../utils");

var _ListItemContext = require("./ListItemContext");

var _utils2 = require("./utils");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function _getRequireWildcardCache() { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

const getListItemHeight = (child, height) => {
  if ((0, _react.isValidElement)(child) && child.props.description) {
    return height + 16;
  }

  return height;
};

const ListInternal = (0, _react.forwardRef)((_ref, forwardedRef) => {
  let children = _ref.children,
      _ref$density = _ref.density,
      density = _ref$density === void 0 ? 0 : _ref$density,
      disabled = _ref.disabled,
      _ref$iconGutter = _ref.iconGutter,
      iconGutter = _ref$iconGutter === void 0 ? false : _ref$iconGutter,
      keyColor = _ref.keyColor,
      onBlur = _ref.onBlur,
      onFocus = _ref.onFocus,
      onKeyDown = _ref.onKeyDown,
      role = _ref.role,
      windowing = _ref.windowing,
      props = _objectWithoutProperties(_ref, ["children", "density", "disabled", "iconGutter", "keyColor", "onBlur", "onFocus", "onKeyDown", "role", "windowing"]);

  const childArray = (0, _react.useMemo)(() => _react.Children.toArray(children), [children]);

  const _listItemDimensions = (0, _utils2.listItemDimensions)(density !== undefined ? density : 0),
        height = _listItemDimensions.height;

  if (windowing === undefined) {
    if (childArray.length > 100) {
      windowing = 'fixed';
    } else {
      windowing = 'none';
    }
  }

  const _useWindow = (0, _utils.useWindow)({
    childHeight: childArray[0] ? getListItemHeight(childArray[0], height) : 0,
    children: children,
    enabled: windowing !== 'none',
    ref: forwardedRef,
    spacerTag: 'li'
  }),
        content = _useWindow.content,
        ref = _useWindow.ref;

  const navProps = (0, _utils.useArrowKeyNav)({
    onBlur,
    onFocus,
    onKeyDown,
    ref
  });
  const context = {
    density,
    iconGutter,
    keyColor
  };
  return _react.default.createElement(_ListItemContext.ListItemContext.Provider, {
    value: context
  }, _react.default.createElement("ul", _extends({
    tabIndex: -1,
    role: role || 'list'
  }, (0, _designTokens.omitStyledProps)(props), navProps), content));
});
exports.ListInternal = ListInternal;
const List = (0, _styledComponents.default)(ListInternal).withConfig({
  displayName: "List",
  componentId: "q1s69i-0"
})(["", " height:100%;list-style:none;overflow:auto;"], _designTokens.reset);
exports.List = List;
//# sourceMappingURL=List.js.map