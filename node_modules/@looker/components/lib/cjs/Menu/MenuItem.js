"use strict";

require("core-js/modules/es.weak-map.js");

require("core-js/modules/es.array.iterator.js");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.MenuItem = void 0;

require("core-js/modules/es.array.index-of.js");

var _styledComponents = _interopRequireDefault(require("styled-components"));

var _react = _interopRequireWildcard(require("react"));

var _designTokens = require("@looker/design-tokens");

var _ArrowRight = require("@styled-icons/material/ArrowRight");

var _Dialog = require("../Dialog");

var _List = require("../List");

var _utils = require("../utils");

var _ListItemContext = require("../List/ListItemContext");

var _utils2 = require("../List/utils");

var _useNestedMenu2 = require("./useNestedMenu");

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function _getRequireWildcardCache() { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

const MenuItemInternal = (0, _react.forwardRef)((_ref, forwardedRef) => {
  let children = _ref.children,
      detail = _ref.detail,
      onClick = _ref.onClick,
      onKeyDown = _ref.onKeyDown,
      onMouseEnter = _ref.onMouseEnter,
      onMouseLeave = _ref.onMouseLeave,
      nestedMenu = _ref.nestedMenu,
      props = _objectWithoutProperties(_ref, ["children", "detail", "onClick", "onKeyDown", "onMouseEnter", "onMouseLeave", "nestedMenu"]);

  const id = (0, _utils.useID)(props.id);

  const _useNestedMenu = (0, _useNestedMenu2.useNestedMenu)({
    id,
    nestedMenu,
    onClick,
    onKeyDown,
    onMouseEnter,
    onMouseLeave
  }),
        popover = _useNestedMenu.popover,
        _useNestedMenu$domPro = _useNestedMenu.domProps,
        nestedMenuOnClick = _useNestedMenu$domPro.onClick,
        nestedMenuRef = _useNestedMenu$domPro.ref,
        nestedMenuProps = _objectWithoutProperties(_useNestedMenu$domPro, ["onClick", "ref"]);

  const ref = (0, _utils.useForkedRef)(nestedMenuRef, forwardedRef);

  const _useContext = (0, _react.useContext)(_ListItemContext.ListItemContext),
        density = _useContext.density;

  const _listItemDimensions = (0, _utils2.listItemDimensions)(density),
        iconSize = _listItemDimensions.iconSize;

  if (detail && nestedMenu) {
    console.warn('The detail prop is not supported when nestedMenu is used.');
  }

  detail = nestedMenu ? _react.default.createElement(NestedMenuIndicator, {
    size: iconSize
  }) : detail;

  const _useContext2 = (0, _react.useContext)(_Dialog.DialogContext),
        closeModal = _useContext2.closeModal;

  const handleOnClick = event => {
    nestedMenuOnClick(event);

    if (closeModal && !event.defaultPrevented) {
      closeModal();
    }
  };

  return _react.default.createElement(_react.default.Fragment, null, _react.default.createElement(_List.ListItem, _extends({
    detail: detail,
    onClick: handleOnClick,
    ref: ref,
    role: "menuitem"
  }, props, nestedMenuProps), children), popover);
});
MenuItemInternal.displayName = 'MenuItemInternal';
const MenuItem = (0, _styledComponents.default)(MenuItemInternal).withConfig({
  displayName: "MenuItem",
  componentId: "sc-13x060p-0"
})([""]);
exports.MenuItem = MenuItem;
const NestedMenuIndicator = (0, _styledComponents.default)(_ArrowRight.ArrowRight).withConfig({
  displayName: "MenuItem__NestedMenuIndicator",
  componentId: "sc-13x060p-1"
})(["color:", ";", ""], ({
  theme
}) => theme.colors.text1, _designTokens.size);
//# sourceMappingURL=MenuItem.js.map