"use strict";

require("core-js/modules/es.weak-map.js");

require("core-js/modules/es.array.iterator.js");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.MenuHeading = void 0;

require("core-js/modules/es.array.index-of.js");

var _react = _interopRequireWildcard(require("react"));

var _styledComponents = _interopRequireDefault(require("styled-components"));

var _designTokens = require("@looker/design-tokens");

var _Heading = require("../Text/Heading");

var _List = require("../List");

var _ListItemContext = require("../List/ListItemContext");

var _MenuHeading = require("./MenuHeading.hooks");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function _getRequireWildcardCache() { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

const MenuHeadingInternal = (_ref) => {
  let children = _ref.children,
      className = _ref.className,
      restProps = _objectWithoutProperties(_ref, ["children", "className"]);

  const labelShimRef = (0, _react.useRef)();
  const isLabelShimVisible = (0, _MenuHeading.useElementVisibility)(labelShimRef);

  const _useContext = (0, _react.useContext)(_ListItemContext.ListItemContext),
        density = _useContext.density;

  const _listItemDimensions = (0, _List.listItemDimensions)(density),
        px = _listItemDimensions.px;

  return _react.default.createElement(MenuHeadingWrapper, {
    className: className,
    renderBoxShadow: !isLabelShimVisible
  }, _react.default.createElement("div", {
    ref: labelShimRef,
    style: {
      height: '0'
    }
  }), _react.default.createElement(_Heading.Heading, _extends({
    as: "h2",
    color: "text5",
    fontFamily: "brand",
    fontSize: "xsmall",
    fontWeight: "medium",
    lineHeight: "xsmall",
    px: px,
    py: "xsmall"
  }, (0, _designTokens.pickStyledProps)(restProps)), children));
};

const MenuHeading = (0, _styledComponents.default)(MenuHeadingInternal).withConfig({
  displayName: "MenuHeading",
  componentId: "szhc1r-0"
})([""]);
exports.MenuHeading = MenuHeading;

const MenuHeadingWrapper = _styledComponents.default.li.withConfig({
  displayName: "MenuHeading__MenuHeadingWrapper",
  componentId: "szhc1r-1"
})(["background:", ";box-shadow:", ";position:sticky;top:-1px;"], ({
  theme: {
    colors
  }
}) => colors.background, ({
  renderBoxShadow,
  theme: {
    colors
  }
}) => renderBoxShadow ? `0 4px 8px -2px ${colors.ui2}` : 'none');
//# sourceMappingURL=MenuHeading.js.map