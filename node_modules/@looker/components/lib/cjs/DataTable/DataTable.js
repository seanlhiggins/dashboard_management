"use strict";

require("core-js/modules/es.symbol.description.js");

require("core-js/modules/es.array.iterator.js");

require("core-js/modules/es.array.slice.js");

require("core-js/modules/es.array.from.js");

require("core-js/modules/es.weak-map.js");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.DataTable = exports.DataTableLayout = void 0;

require("core-js/modules/es.array.map.js");

require("core-js/modules/es.array.filter.js");

require("core-js/modules/es.array.includes.js");

require("core-js/modules/es.string.includes.js");

var _styledComponents = _interopRequireDefault(require("styled-components"));

var _react = _interopRequireWildcard(require("react"));

var _BulkActions = require("./BulkActions");

var _DataTableContext = require("./DataTableContext");

var _DataTableFilters = require("./Filters/DataTableFilters");

var _Table = require("./Table");

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function _getRequireWildcardCache() { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }

function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }

function _iterableToArrayLimit(arr, i) { if (typeof Symbol === "undefined" || !(Symbol.iterator in Object(arr))) return; var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }

function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }

const DataTableLayout = props => {
  const bulk = props.bulk,
        className = props.className,
        caption = props.caption,
        columns = props.columns,
        filterInput = props.filters,
        explicitFirstColumnStuck = props.firstColumnStuck,
        onSort = props.onSort,
        select = props.select;
  const columnsVisibleDefault = columns.filter(c => c.hide === false).map(c => c.id);

  const _useState = (0, _react.useState)(columnsVisibleDefault),
        _useState2 = _slicedToArray(_useState, 2),
        columnsVisible = _useState2[0],
        setColumnsVisible = _useState2[1];

  const columnsDisplayState = columns.map(c => c.hide === undefined || columnsVisible.includes(c.id));
  const firstColumnStuck = columnsDisplayState[0] === false ? false : explicitFirstColumnStuck !== undefined ? explicitFirstColumnStuck : Boolean(select);
  const allSelected = select && select.pageItems.every(id => select.selectedItems.includes(id)) ? true : select && select.pageItems.some(id => select.selectedItems.includes(id)) ? 'mixed' : false;
  const context = {
    allSelected,
    columns,
    columnsDisplayState,
    onSort,
    select
  };

  const filters = filterInput && _react.default.createElement(_DataTableFilters.DataTableFilters, {
    columns: columns,
    columnsVisible: columnsVisible,
    onColumnVisibilityChange: setColumnsVisible
  }, filterInput);

  return _react.default.createElement(_DataTableContext.DataTableContext.Provider, {
    value: context
  }, _react.default.createElement("div", {
    className: className
  }, filters, bulk && select && select.selectedItems.length > 0 && _react.default.createElement(_BulkActions.BulkActions, bulk), _react.default.createElement(_Table.Table, _extends({}, props, {
    caption: caption,
    columns: columns,
    columnsVisible: columnsVisible,
    firstColumnStuck: firstColumnStuck
  }))));
};

exports.DataTableLayout = DataTableLayout;
const DataTable = (0, _styledComponents.default)(DataTableLayout).withConfig({
  displayName: "DataTable",
  componentId: "mgms8t-0"
})(["width:100%;"]);
exports.DataTable = DataTable;
//# sourceMappingURL=DataTable.js.map