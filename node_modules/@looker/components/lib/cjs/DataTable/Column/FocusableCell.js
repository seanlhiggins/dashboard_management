"use strict";

require("core-js/modules/es.weak-map.js");

require("core-js/modules/es.array.iterator.js");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.FocusableCell = void 0;

var _styledComponents = _interopRequireWildcard(require("styled-components"));

var _designTokens = require("@looker/design-tokens");

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function _getRequireWildcardCache() { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

const focusVisibleStyle = (0, _styledComponents.css)(["&:focus{outline:", ";}"], ({
  focusVisible,
  theme: {
    colors
  }
}) => {
  return focusVisible ? `1px solid ${colors.key}` : 'none';
});

const FocusableCell = _styledComponents.default.td.withConfig({
  shouldForwardProp: _designTokens.shouldForwardProp
}).attrs(() => ({
  tabIndex: -1
})).withConfig({
  displayName: "FocusableCell",
  componentId: "sc-1310q9w-0"
})(["", ""], focusVisibleStyle);

exports.FocusableCell = FocusableCell;
//# sourceMappingURL=FocusableCell.js.map