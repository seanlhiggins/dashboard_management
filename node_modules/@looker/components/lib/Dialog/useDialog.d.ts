import { ReactNode, FC } from 'react';
import { DrawerPlacements } from '../Drawer/DrawerSurface';
import { DialogSurfaceProps, DialogPlacements } from './DialogSurface';
export interface UseDialogBaseProps {
    content: ReactNode;
    isOpen?: boolean;
    defaultOpen?: boolean;
    setOpen?: (open: boolean) => void;
    onClose?: () => void;
    canClose?: () => boolean;
    id?: string;
}
export interface UseDialogProps extends UseDialogBaseProps, DialogSurfaceProps {
    Surface?: FC;
}
export interface UseDialogPropsInternal extends Omit<UseDialogProps, 'placement'> {
    placement?: DialogPlacements | DrawerPlacements;
}
export interface UseDialogResponseDom {
    onClick: () => void;
    role: string;
    'aria-expanded': boolean;
}
export interface UseDialogResponse {
    isOpen: boolean;
    setOpen: (open: boolean) => void;
    dialog: ReactNode;
    domProps: UseDialogResponseDom;
}
export declare const useDialog: ({ content, defaultOpen, isOpen: controlledIsOpen, canClose, onClose, setOpen: controlledSetOpen, Surface: CustomSurface, placement, id, ...surfaceProps }: UseDialogPropsInternal) => UseDialogResponse;
