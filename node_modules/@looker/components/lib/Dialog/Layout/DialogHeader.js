import "core-js/modules/es.object.keys.js";
import "core-js/modules/es.array.index-of.js";
import "core-js/modules/es.symbol.js";
import "core-js/modules/es.object.assign.js";

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

import { useTranslation } from 'react-i18next';
import React, { useContext } from 'react';
import styled from 'styled-components';
import { omitStyledProps, space, reset } from '@looker/design-tokens';
import { Close } from '@styled-icons/material/Close';
import { IconButton } from '../../Button';
import { Heading } from '../../Text';
import { DialogContext } from '../DialogContext';

var DialogHeaderLayout = function DialogHeaderLayout(_ref) {
  var children = _ref.children,
      hideClose = _ref.hideClose,
      detail = _ref.detail,
      fontSize = _ref.fontSize,
      _ref$fontWeight = _ref.fontWeight,
      fontWeight = _ref$fontWeight === void 0 ? 'semiBold' : _ref$fontWeight,
      props = _objectWithoutProperties(_ref, ["children", "hideClose", "detail", "fontSize", "fontWeight"]);

  var _useTranslation = useTranslation('DialogHeader'),
      t = _useTranslation.t;

  var _useContext = useContext(DialogContext),
      closeModal = _useContext.closeModal,
      dialogId = _useContext.id;

  var id = props.id;
  var headingId = dialogId ? "".concat(dialogId, "-heading") : undefined;
  return React.createElement("header", _extends({
    "aria-labelledby": headingId
  }, omitStyledProps(props)), React.createElement(Heading, {
    id: headingId,
    as: "h3",
    mr: "xlarge",
    fontSize: fontSize,
    fontWeight: fontWeight,
    style: {
      gridArea: 'text'
    },
    truncate: true
  }, children), detail ? React.createElement(Detail, null, detail) : !hideClose && React.createElement(Detail, null, React.createElement(IconButton, {
    id: id ? "".concat(id, "-iconButton") : undefined,
    tabIndex: -1,
    size: "medium",
    onClick: closeModal,
    label: t('Close'),
    icon: React.createElement(Close, null)
  })));
};

var Detail = styled.div.withConfig({
  displayName: "DialogHeader__Detail",
  componentId: "sc-12qdj5f-0"
})(["margin-bottom:-", ";margin-left:auto;margin-top:-", ";"], function (_ref2) {
  var theme = _ref2.theme;
  return theme.space.xsmall;
}, function (_ref3) {
  var theme = _ref3.theme;
  return theme.space.xsmall;
});
export var DialogHeader = styled(DialogHeaderLayout).attrs(function (_ref4) {
  var _ref4$p = _ref4.p,
      p = _ref4$p === void 0 ? ['medium', 'large'] : _ref4$p,
      _ref4$pr = _ref4.pr,
      pr = _ref4$pr === void 0 ? 'medium' : _ref4$pr,
      _ref4$px = _ref4.px,
      px = _ref4$px === void 0 ? ['medium', 'xlarge'] : _ref4$px;
  return {
    p: p,
    pr: pr,
    px: px
  };
}).withConfig({
  displayName: "DialogHeader",
  componentId: "sc-12qdj5f-1"
})(["", " ", " align-items:center;display:flex;flex-shrink:0;"], reset, space);
//# sourceMappingURL=DialogHeader.js.map