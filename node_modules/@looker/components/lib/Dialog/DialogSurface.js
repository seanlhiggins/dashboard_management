import styled, { css } from 'styled-components';
import { height } from 'styled-system';
import { theme } from '@looker/design-tokens';
import { SurfaceBase, surfaceTransition } from '../Dialog/SurfaceBase';
import { dialogWidth } from './dialogWidth';
export var dialogPlacements = ['center', 'cover', 'top'];
var space = theme.space,
    breakpoints = theme.breakpoints;
var gapSpace = 'xxlarge';
var coverDimension = "calc(100% - ".concat(space[gapSpace], " * 2)");
var placements = {
  center: css(["align-self:flex-start;max-height:100%;@media screen and (min-width:", "){align-self:center;max-height:", ";}"], breakpoints[0], coverDimension),
  cover: css(["height:100%;@media screen and (min-width:", "){height:", ";width:", ";}@media screen and (min-width:", "){height:", ";width:", ";}"], breakpoints[0], coverDimension, coverDimension, breakpoints[1], coverDimension, coverDimension),
  top: css(["align-self:flex-start;margin-top:0;max-height:100%;@media screen and (min-width:", "){margin-top:", ";max-height:", ";}"], breakpoints[0], function (_ref) {
    var theme = _ref.theme;
    return theme.space[gapSpace];
  }, coverDimension)
};
var defaultDialogSurfacePlacement = 'center';
export var DialogSurface = styled(SurfaceBase).attrs(function (_ref2) {
  var _ref2$placement = _ref2.placement,
      placement = _ref2$placement === void 0 ? defaultDialogSurfacePlacement : _ref2$placement,
      _ref2$width = _ref2.width,
      width = _ref2$width === void 0 ? 'medium' : _ref2$width;
  return {
    placement: placement,
    width: width
  };
}).withConfig({
  displayName: "DialogSurface",
  componentId: "sg86rj-0"
})(["box-shadow:", ";position:relative;transition:transform ", ",opacity ", ";", " ", " ", " @media screen and (min-width:", "){border-radius:", ";}&.entering,&.exiting{opacity:0.01;transform:translateY(100%);}"], function (_ref3) {
  var theme = _ref3.theme;
  return theme.shadows[5];
}, surfaceTransition, surfaceTransition, dialogWidth, function (_ref4) {
  var placement = _ref4.placement;
  return placements[placement || defaultDialogSurfacePlacement];
}, height, breakpoints[0], function (_ref5) {
  var theme = _ref5.theme;
  return theme.radii.medium;
});
//# sourceMappingURL=DialogSurface.js.map