import "core-js/modules/es.object.keys.js";
import "core-js/modules/es.array.index-of.js";
import "core-js/modules/es.symbol.js";
import "core-js/modules/es.object.assign.js";

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

import { width } from '@looker/design-tokens';
import React, { forwardRef } from 'react';
import styled from 'styled-components';
import { List } from '../List';
import { listPadding } from '../List/utils';
import { MenuItem } from './MenuItem';
import { NestedMenuProvider } from './NestedMenuProvider';
export var MenuListInternal = forwardRef(function (_ref, forwardedRef) {
  var children = _ref.children,
      props = _objectWithoutProperties(_ref, ["children"]);

  return React.createElement(NestedMenuProvider, null, React.createElement(List, _extends({
    role: "menu",
    ref: forwardedRef
  }, props), children));
});
MenuListInternal.displayName = 'MenuListInternal';
export var MenuList = styled(MenuListInternal).withConfig({
  displayName: "MenuList",
  componentId: "sc-1m0jggd-0"
})(["", " min-width:12rem;overflow:auto;", ""], width, function () {
  return listPadding(MenuItem);
});
//# sourceMappingURL=MenuList.js.map