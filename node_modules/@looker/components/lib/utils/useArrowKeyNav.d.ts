import { FocusEvent, KeyboardEvent, Ref } from 'react';
export interface UseArrowKeyNavProps<E extends HTMLElement> {
    axis?: 'vertical' | 'horizontal' | 'both';
    getNextFocus?: (direction: 1 | -1, element: E, vertical?: boolean) => HTMLElement | null;
    ref?: Ref<E>;
    onBlur?: (e: FocusEvent<E>) => void;
    onFocus?: (e: FocusEvent<E>) => void;
    onKeyDown?: (e: KeyboardEvent<E>) => void;
}
export declare const useArrowKeyNav: <E extends HTMLElement = HTMLElement>({ axis, getNextFocus, ref, onBlur, onFocus, onKeyDown, }: UseArrowKeyNavProps<E>) => {
    onBlur: (event: FocusEvent<E>) => void;
    onFocus: (event: FocusEvent<E>) => void;
    onKeyDown: (event: KeyboardEvent<E>) => void;
    ref: (node: E | null) => void;
    tabIndex: number | undefined;
};
