export declare enum Locales {
    Arabic = "ar",
    German = "de",
    English = "en",
    Spanish = "es",
    French = "fr",
    Italian = "it",
    Japanese = "ja",
    Korean = "ko",
    Dutch = "nl",
    Polish = "pl",
    Portuguese = "pt",
    PortugueseBrazil = "pt-br",
    Russian = "ru",
    Swedish = "sv",
    Turkish = "tr",
    Chinese = "zh-cn",
    ChineseTaiwan = "zh-tw"
}
export declare type LocaleCodes = Locales.Arabic | Locales.German | Locales.English | Locales.Spanish | Locales.French | Locales.Italian | Locales.Japanese | Locales.Korean | Locales.Dutch | Locales.Polish | Locales.Portuguese | Locales.PortugueseBrazil | Locales.Russian | Locales.Swedish | Locales.Turkish | Locales.Chinese | Locales.ChineseTaiwan;
export declare const dateFnLocaleMap: {
    ar: Locale;
    de: Locale;
    en: Locale;
    es: Locale;
    fr: Locale;
    it: Locale;
    ja: Locale;
    ko: Locale;
    nl: Locale;
    pl: Locale;
    pt: Locale;
    "pt-br": Locale;
    ru: Locale;
    tr: Locale;
    sv: Locale;
    "zh-cn": Locale;
    "zh-tw": Locale;
};
export declare const formatDateString: (date?: Date | undefined, locale?: LocaleCodes, stringFormat?: string, timeZone?: undefined | string) => string | '';
export declare const formatYear: (date: Date) => number;
export declare const parseDateFromString: (value: string, locale?: Locales) => Date | false;
