{"version":3,"sources":["../../src/utils/useWindow.tsx"],"names":["React","Children","useEffect","useMemo","useReducer","getWindowedListBoundaries","useCallbackRef","useMeasuredElement","useScrollPosition","initialState","afterHeight","beforeHeight","end","scrollBottom","scrollTop","start","bufferHeight","reducer","state","action","payload","scrollPosition","height","totalHeight","childHeightLadder","length","bufferedTop","Math","max","bufferedBottom","min","useWindow","children","enabled","childHeight","ref","spacerTag","childArray","toArray","sum","ladder","forEach","child","index","push","containerElement","callbackRef","variable","dispatch","type","fixed","itemHeight","Spacer","before","after","content","slice"],"mappings":"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","sourcesContent":["/*\n\n MIT License\n\n Copyright (c) 2021 Looker Data Sciences, Inc.\n\n Permission is hereby granted, free of charge, to any person obtaining a copy\n of this software and associated documentation files (the \"Software\"), to deal\n in the Software without restriction, including without limitation the rights\n to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n copies of the Software, and to permit persons to whom the Software is\n furnished to do so, subject to the following conditions:\n\n The above copyright notice and this permission notice shall be included in all\n copies or substantial portions of the Software.\n\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n SOFTWARE.\n\n */\n\nimport React, {\n  Children,\n  ReactChild,\n  Reducer,\n  Ref,\n  useEffect,\n  useMemo,\n  useReducer,\n} from 'react'\nimport { getWindowedListBoundaries } from './getWindowedListBoundaries'\nimport { useCallbackRef } from './useCallbackRef'\nimport { useMeasuredElement } from './useMeasuredElement'\nimport { useScrollPosition } from './useScrollPosition'\n\ninterface WindowHeightState {\n  start: number\n  end: number\n  scrollTop: number\n  scrollBottom: number\n  beforeHeight: number\n  afterHeight: number\n}\n\ninterface WindowHeightPayloadObject {\n  scrollPosition: number\n  height: number\n  childHeightLadder: number[]\n  totalHeight: number\n}\n\ninterface WindowHeightAction {\n  type: 'CHANGE'\n  payload: WindowHeightPayloadObject\n}\n\nconst initialState = {\n  afterHeight: 0,\n  beforeHeight: 0,\n  end: 0,\n  scrollBottom: 0,\n  scrollTop: 0,\n  start: 0,\n}\nconst bufferHeight = 1000\n\n// For windowing lists with variable item height, a reducer that derives\n// the updated state from the previous state is more efficient than\n// calculating from scratch every time. (In fact, calculating from scratch\n// erases most of the performance gain from windowing)\n\n// On scroll and resize events, the reducer checks up and down the \"ladder\"\n// of saved item heights from the previous window location to find\n// the new \"window\" start & end, and spacer heights\nconst reducer: Reducer<WindowHeightState, WindowHeightAction> = (\n  state,\n  action\n) => {\n  let { beforeHeight, afterHeight, start, end } = state\n  const {\n    scrollPosition,\n    height,\n    totalHeight,\n    childHeightLadder,\n  } = action.payload\n\n  const scrollTop = scrollPosition\n  const scrollBottom = scrollPosition + height\n\n  if (!childHeightLadder[start] || beforeHeight !== childHeightLadder[start]) {\n    start = 0\n  }\n  if (\n    !childHeightLadder[end] ||\n    afterHeight !== totalHeight - childHeightLadder[end + 1]\n  ) {\n    end = childHeightLadder.length - 1\n  }\n\n  const bufferedTop = Math.max(0, scrollTop - bufferHeight)\n  const bufferedBottom = Math.min(scrollBottom + bufferHeight, totalHeight)\n  while (childHeightLadder[start] < bufferedTop) {\n    // move the top of the window down\n    start += 1\n  }\n  if (start > 0) {\n    while (childHeightLadder[start] > bufferedTop) {\n      // move the top of the window up\n      start -= 1\n    }\n  }\n  if (end + 1 < childHeightLadder.length) {\n    while (childHeightLadder[end] < bufferedBottom) {\n      // move the bottom of the window down\n      end += 1\n    }\n  }\n  while (childHeightLadder[end] > bufferedBottom) {\n    // move the bottom of the window up\n    end -= 1\n  }\n\n  return {\n    afterHeight:\n      end + 1 === childHeightLadder.length\n        ? 0\n        : totalHeight - childHeightLadder[end + 1],\n    beforeHeight: childHeightLadder[start],\n    end,\n    scrollBottom,\n    scrollTop,\n    start,\n  }\n}\n\nexport type ChildHeightFunction = (child: ReactChild, index: number) => number\n\nexport type WindowSpacerTag = 'div' | 'li' | 'tr'\n\nexport interface UseWindowProps<E extends HTMLElement> {\n  enabled?: boolean\n  children?: JSX.Element | JSX.Element[]\n  /** Derive the height of each child using props, type, etc. */\n  childHeight: number | ChildHeightFunction\n  /** Tagname to use for the spacers above and below the window */\n  spacerTag?: WindowSpacerTag\n  ref?: Ref<E>\n}\n\nexport const useWindow = <E extends HTMLElement = HTMLElement>({\n  children,\n  enabled,\n  childHeight,\n  ref,\n  spacerTag = 'div',\n}: UseWindowProps<E>) => {\n  const childArray = useMemo(() => Children.toArray(children), [children])\n\n  const [totalHeight, childHeightLadder] = useMemo(() => {\n    let sum = 0\n    const ladder: number[] = []\n    if (typeof childHeight === 'function') {\n      childArray.forEach((child, index) => {\n        ladder.push(sum)\n        sum += childHeight(child as ReactChild, index)\n      })\n    }\n    return [sum, ladder]\n  }, [childHeight, childArray])\n\n  const [containerElement, callbackRef] = useCallbackRef<E>(ref)\n  const [{ height }] = useMeasuredElement(enabled ? containerElement : null)\n  const scrollPosition = useScrollPosition(enabled ? containerElement : null)\n\n  // For variable childHeight\n  const [variable, dispatch] = useReducer(reducer, initialState)\n  useEffect(() => {\n    // If using fixed childHeight, totalHeight will be 0\n    if (totalHeight > 0) {\n      if (enabled) {\n        dispatch({\n          payload: {\n            childHeightLadder,\n            height,\n            scrollPosition,\n            totalHeight,\n          },\n          type: 'CHANGE',\n        })\n      }\n    }\n  }, [enabled, childHeightLadder, height, scrollPosition, totalHeight])\n\n  // For fixed childHeight\n  const fixed = useMemo(() => {\n    if (typeof childHeight === 'number') {\n      return getWindowedListBoundaries({\n        enabled,\n        height,\n        itemHeight: childHeight,\n        length: childArray.length,\n        scrollPosition,\n      })\n    }\n    return false\n  }, [enabled, childArray, height, childHeight, scrollPosition])\n\n  // Get values from fixed unless it's false, in which case use variable\n  const { start, end, beforeHeight, afterHeight } = fixed || variable\n\n  const Spacer = spacerTag\n  // after & before are spacers to make scrolling smooth\n  const before =\n    beforeHeight > 0 ? (\n      <Spacer style={{ height: `${beforeHeight}px` }} data-testid=\"before\" />\n    ) : null\n  const after =\n    afterHeight > 0 ? (\n      <Spacer style={{ height: `${afterHeight}px` }} data-testid=\"after\" />\n    ) : null\n\n  return {\n    containerElement,\n    content: enabled ? (\n      <>\n        {before}\n        {childArray.slice(start, end + 1)}\n        {after}\n      </>\n    ) : (\n      childArray\n    ),\n    ref: callbackRef,\n  }\n}\n"],"file":"useWindow.js"}